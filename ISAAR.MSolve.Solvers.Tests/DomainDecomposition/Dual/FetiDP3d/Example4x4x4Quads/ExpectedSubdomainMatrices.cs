using System;
using System.Collections.Generic;
using System.Text;
using ISAAR.MSolve.LinearAlgebra.Matrices;
using ISAAR.MSolve.LinearAlgebra.Vectors;

//TODO: We need more decimal digits for better precision
namespace ISAAR.MSolve.Solvers.Tests.DomainDecomposition.Dual.FetiDP3d.Example4x4x4Quads
{
    public static class ExpectedSubdomainMatrices
    {
        public static Matrix GetMatrixKbb(int subdomainID)
        {
            int[] boundaryDofs = ExpectedConnectivityData.GetDofsBoundaryInRemainder(subdomainID);
            return GetMatrixKrr(subdomainID).GetSubmatrix(boundaryDofs, boundaryDofs);
        }

        public static Matrix GetMatrixKbi(int subdomainID)
        {
            int[] boundaryDofs = ExpectedConnectivityData.GetDofsBoundaryInRemainder(subdomainID);
            int[] internalDofs = ExpectedConnectivityData.GetDofsInternalInRemainder(subdomainID);
            return GetMatrixKrr(subdomainID).GetSubmatrix(boundaryDofs, internalDofs);
        }

        public static Matrix GetMatrixKcc(int subdomainID)
        {
            if (subdomainID == 0)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,11.7188,11.7188},
                {11.7188,25,11.7188},
                {11.7188,11.7188,25}});
            }
            else if (subdomainID == 1)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,11.7188,-11.7188},
                {11.7188,25,-11.7188},
                {-11.7188,-11.7188,25}});
            }
            else if (subdomainID == 2)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,-11.7188,11.7188},
                {-11.7188,25,-11.7188},
                {11.7188,-11.7188,25}});
            }
            else if (subdomainID == 3)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,-11.7188,-11.7188},
                {-11.7188,25,11.7188},
                {-11.7188,11.7188,25}});
            }
            else if (subdomainID == 4)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,-11.7188,-11.7188},
                {-11.7188,25,11.7188},
                {-11.7188,11.7188,25}});
            }
            else if (subdomainID == 5)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,-11.7188,11.7188},
                {-11.7188,25,-11.7188},
                {11.7188,-11.7188,25}});
            }
            else if (subdomainID == 6)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,11.7188,-11.7188},
                {11.7188,25,-11.7188},
                {-11.7188,-11.7188,25}});
            }
            else if (subdomainID == 7)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {{25,11.7188,11.7188},
                {11.7188,25,11.7188},
                {11.7188,11.7188,25}});
            }
            else throw new ArgumentException("Subdomain ID must be in [0, 8)");
        }

        public static Matrix GetMatrixKccStar(int subdomainID)
        {
            if (subdomainID == 0)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,6.5335,6.5335},
                    {6.5335,16.3123,6.5335},
                    {6.5335,6.5335,16.3123}
                });
            }
            else if (subdomainID == 1)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,6.5335,-6.5335},
                    {6.5335,16.3123,-6.5335},
                    {-6.5335,-6.5335,16.3123}
                });
            }
            else if (subdomainID == 2)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,-6.5335,6.5335},
                    {-6.5335,16.3123,-6.5335},
                    {6.5335,-6.5335,16.3123}
                });
            }
            else if (subdomainID == 3)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,-6.5335,-6.5335},
                    {-6.5335,16.3123,6.5335},
                    {-6.5335,6.5335,16.3123}
                });
            }
            else if (subdomainID == 4)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,-6.5335,-6.5335},
                    {-6.5335,16.3123,6.5335},
                    {-6.5335,6.5335,16.3123}
                });
            }
            else if (subdomainID == 5)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,-6.5335,6.5335},
                    {-6.5335,16.3123,-6.5335},
                    {6.5335,-6.5335,16.3123}
                });
            }
            else if (subdomainID == 6)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,6.5335,-6.5335},
                    {6.5335,16.3123,-6.5335},
                    {-6.5335,-6.5335,16.3123}
                });
            }
            else if (subdomainID == 7)
            {
                return Matrix.CreateFromArray(new double[3, 3]
                {
                    {16.3123,6.5335,6.5335},
                    {6.5335,16.3123,6.5335},
                    {6.5335,6.5335,16.3123}
                });
            }
            else throw new ArgumentException("Subdomain ID must be in [0, 8)");
        }

        public static Matrix GetMatrixKff(int subdomainID)
        {
            if (subdomainID == 0)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {200,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-4.4409e-15,31.25,-8.8818e-16,-2.6645e-15,-20.3125,-23.4375,4.4409e-16,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375,3.125,0,0,-6.25,-5.8594,-5.8594},
                    {1.7764e-15,200,1.7764e-15,-8.8818e-16,31.25,2.6645e-15,0,-62.5,-2.6645e-15,-23.4375,-20.3125,-4.4409e-16,8.8818e-16,31.25,1.7764e-15,0,3.125,0,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                    {3.5527e-15,1.7764e-15,200,3.5527e-15,-1.7764e-15,31.25,-8.8818e-16,4.4409e-15,31.25,0,-8.8818e-16,3.125,8.8818e-16,-8.8818e-16,-62.5,-23.4375,-4.4409e-16,-20.3125,0,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                    {-62.5,-8.8818e-16,3.5527e-15,100,0,3.5527e-15,-20.3125,23.4375,4.4409e-16,15.625,14.0625,-8.8818e-16,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                    {1.7764e-15,31.25,-1.7764e-15,0,100,0,23.4375,-20.3125,-4.4409e-16,-14.0625,-31.25,-8.8818e-16,8.8818e-16,3.125,0,8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                    {-4.4409e-15,2.6645e-15,31.25,3.5527e-15,0,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,2.6645e-15,15.625,23.4375,0,-20.3125,-14.0625,8.8818e-16,-31.25,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                    {31.25,0,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,0,-31.25,-14.0625,-8.8818e-16,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,15.625,8.8818e-16,8.8818e-16,-10.1563,-3.5156,-11.7188},
                    {-8.8818e-16,-62.5,4.4409e-15,23.4375,-20.3125,-8.8818e-16,0,100,1.7764e-15,14.0625,15.625,1.7764e-15,0,-20.3125,23.4375,5.8594,-6.25,5.8594,1.7764e-15,15.625,14.0625,3.5156,1.5625,3.5156},
                    {-2.6645e-15,-2.6645e-15,31.25,4.4409e-16,-4.4409e-16,3.125,0,1.7764e-15,100,8.8818e-16,1.7764e-15,15.625,0,23.4375,-20.3125,-5.8594,5.8594,-6.25,0,-14.0625,-31.25,-11.7188,-3.5156,-10.1563},
                    {-20.3125,-23.4375,0,15.625,-14.0625,8.8818e-16,-31.25,14.0625,8.8818e-16,50,23.4375,1.7764e-15,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-10.1563,3.5156,11.7188,7.8125,5.8594,7.0313},
                    {-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,2.6645e-15,-14.0625,15.625,1.7764e-15,23.4375,50,0,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,-3.5156,1.5625,3.5156,5.8594,7.8125,7.0313},
                    {4.4409e-16,-4.4409e-16,3.125,-8.8818e-16,-8.8818e-16,15.625,-8.8818e-16,1.7764e-15,15.625,1.7764e-15,0,50,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,11.7188,-3.5156,-10.1563,-7.0313,-7.0313,-15.625},
                    {31.25,8.8818e-16,8.8818e-16,-20.3125,8.8818e-16,23.4375,3.125,0,0,-6.25,-5.8594,5.8594,100,0,3.5527e-15,-31.25,0,-14.0625,15.625,0,-1.7764e-15,-10.1563,-11.7188,-3.5156},
                    {-1.7764e-15,31.25,-8.8818e-16,0,3.125,0,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,100,0,0,15.625,8.8818e-16,-8.8818e-16,-31.25,-14.0625,-11.7188,-10.1563,-3.5156},
                    {0,1.7764e-15,-62.5,23.4375,0,-20.3125,0,23.4375,-20.3125,5.8594,5.8594,-6.25,3.5527e-15,0,100,14.0625,-1.7764e-15,15.625,-1.7764e-15,14.0625,15.625,3.5156,3.5156,1.5625},
                    {-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-31.25,0,14.0625,50,0,23.4375,-10.1563,11.7188,3.5156,7.8125,7.0313,5.8594},
                    {4.4409e-16,3.125,-4.4409e-16,-8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,0,15.625,-1.7764e-15,0,50,0,11.7188,-10.1563,-3.5156,-7.0313,-15.625,-7.0313},
                    {-23.4375,0,-20.3125,14.0625,8.8818e-16,-31.25,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-14.0625,8.8818e-16,15.625,23.4375,0,50,-3.5156,3.5156,1.5625,5.8594,7.0313,7.8125},
                    {3.125,-4.4409e-16,0,-6.25,5.8594,5.8594,15.625,1.7764e-15,0,-10.1563,-3.5156,11.7188,15.625,-8.8818e-16,-1.7764e-15,-10.1563,11.7188,-3.5156,50,0,1.7764e-15,-15.625,-7.0313,-7.0313},
                    {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,8.8818e-16,15.625,-14.0625,3.5156,1.5625,-3.5156,0,-31.25,14.0625,11.7188,-10.1563,3.5156,0,50,23.4375,7.0313,7.8125,5.8594},
                    {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,8.8818e-16,14.0625,-31.25,11.7188,3.5156,-10.1563,-1.7764e-15,-14.0625,15.625,3.5156,-3.5156,1.5625,1.7764e-15,23.4375,50,7.0313,5.8594,7.8125},
                    {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-10.1563,3.5156,-11.7188,7.8125,5.8594,-7.0313,-10.1563,-11.7188,3.5156,7.8125,-7.0313,5.8594,-15.625,7.0313,7.0313,25,11.7188,11.7188},
                    {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,-3.5156,1.5625,-3.5156,5.8594,7.8125,-7.0313,-11.7188,-10.1563,3.5156,7.0313,-15.625,7.0313,-7.0313,7.8125,5.8594,11.7188,25,11.7188},
                    {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-11.7188,3.5156,-10.1563,7.0313,7.0313,-15.625,-3.5156,-3.5156,1.5625,5.8594,-7.0313,7.8125,-7.0313,5.8594,7.8125,11.7188,11.7188,25}
                });
            }
            else if (subdomainID == 1)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {100,1.7764e-15,-1.7764e-15,-31.25,0,14.0625,15.625,0,-8.8818e-16,-10.1563,-11.7188,3.5156,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375,3.125,0,0,-6.25,-5.8594,-5.8594},
                    {1.7764e-15,100,0,8.8818e-16,15.625,1.7764e-15,0,-31.25,14.0625,-11.7188,-10.1563,3.5156,8.8818e-16,31.25,1.7764e-15,0,3.125,0,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                    {-1.7764e-15,0,100,-14.0625,0,15.625,8.8818e-16,-14.0625,15.625,-3.5156,-3.5156,1.5625,8.8818e-16,-8.8818e-16,-62.5,-23.4375,-4.4409e-16,-20.3125,0,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                    {-31.25,8.8818e-16,-14.0625,50,0,-23.4375,-10.1563,11.7188,-3.5156,7.8125,7.0313,-5.8594,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                    {0,15.625,0,0,50,0,11.7188,-10.1563,3.5156,-7.0313,-15.625,7.0313,8.8818e-16,3.125,0,8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                    {14.0625,1.7764e-15,15.625,-23.4375,0,50,3.5156,-3.5156,1.5625,-5.8594,-7.0313,7.8125,23.4375,0,-20.3125,-14.0625,8.8818e-16,-31.25,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                    {15.625,0,8.8818e-16,-10.1563,11.7188,3.5156,50,1.7764e-15,-1.7764e-15,-15.625,-7.0313,7.0313,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,15.625,8.8818e-16,8.8818e-16,-10.1563,-3.5156,-11.7188},
                    {0,-31.25,-14.0625,11.7188,-10.1563,-3.5156,1.7764e-15,50,-23.4375,7.0313,7.8125,-5.8594,0,-20.3125,23.4375,5.8594,-6.25,5.8594,1.7764e-15,15.625,14.0625,3.5156,1.5625,3.5156},
                    {-8.8818e-16,14.0625,15.625,-3.5156,3.5156,1.5625,-1.7764e-15,-23.4375,50,-7.0313,-5.8594,7.8125,0,23.4375,-20.3125,-5.8594,5.8594,-6.25,0,-14.0625,-31.25,-11.7188,-3.5156,-10.1563},
                    {-10.1563,-11.7188,-3.5156,7.8125,-7.0313,-5.8594,-15.625,7.0313,-7.0313,25,11.7188,-11.7188,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-10.1563,3.5156,11.7188,7.8125,5.8594,7.0313},
                    {-11.7188,-10.1563,-3.5156,7.0313,-15.625,-7.0313,-7.0313,7.8125,-5.8594,11.7188,25,-11.7188,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,-3.5156,1.5625,3.5156,5.8594,7.8125,7.0313},
                    {3.5156,3.5156,1.5625,-5.8594,7.0313,7.8125,7.0313,-5.8594,7.8125,-11.7188,-11.7188,25,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,11.7188,-3.5156,-10.1563,-7.0313,-7.0313,-15.625},
                    {31.25,8.8818e-16,8.8818e-16,-20.3125,8.8818e-16,23.4375,3.125,0,0,-6.25,-5.8594,5.8594,200,0,5.3291e-15,-62.5,8.8818e-16,-3.5527e-15,31.25,-8.8818e-16,-2.6645e-15,-20.3125,-23.4375,4.4409e-16},
                    {-1.7764e-15,31.25,-8.8818e-16,0,3.125,0,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,200,0,-8.8818e-16,31.25,2.6645e-15,-8.8818e-16,-62.5,-2.6645e-15,-23.4375,-20.3125,0},
                    {0,1.7764e-15,-62.5,23.4375,0,-20.3125,0,23.4375,-20.3125,5.8594,5.8594,-6.25,5.3291e-15,0,200,4.4409e-15,-2.6645e-15,31.25,-8.8818e-16,5.3291e-15,31.25,0,-8.8818e-16,3.125},
                    {-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-62.5,-8.8818e-16,4.4409e-15,100,0,3.5527e-15,-20.3125,23.4375,0,15.625,14.0625,-8.8818e-16},
                    {4.4409e-16,3.125,-4.4409e-16,-8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,8.8818e-16,31.25,-2.6645e-15,0,100,0,23.4375,-20.3125,0,-14.0625,-31.25,-8.8818e-16},
                    {-23.4375,0,-20.3125,14.0625,8.8818e-16,-31.25,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-3.5527e-15,2.6645e-15,31.25,3.5527e-15,0,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625},
                    {3.125,-4.4409e-16,0,-6.25,5.8594,5.8594,15.625,1.7764e-15,0,-10.1563,-3.5156,11.7188,31.25,-8.8818e-16,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,1.7764e-15,-31.25,-14.0625,-8.8818e-16},
                    {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,8.8818e-16,15.625,-14.0625,3.5156,1.5625,-3.5156,-8.8818e-16,-62.5,5.3291e-15,23.4375,-20.3125,-8.8818e-16,0,100,0,14.0625,15.625,8.8818e-16},
                    {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,8.8818e-16,14.0625,-31.25,11.7188,3.5156,-10.1563,-2.6645e-15,-2.6645e-15,31.25,0,0,3.125,1.7764e-15,0,100,1.7764e-15,1.7764e-15,15.625},
                    {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-10.1563,3.5156,-11.7188,7.8125,5.8594,-7.0313,-20.3125,-23.4375,0,15.625,-14.0625,8.8818e-16,-31.25,14.0625,1.7764e-15,50,23.4375,1.7764e-15},
                    {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,-3.5156,1.5625,-3.5156,5.8594,7.8125,-7.0313,-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,-14.0625,15.625,1.7764e-15,23.4375,50,0},
                    {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-11.7188,3.5156,-10.1563,7.0313,7.0313,-15.625,4.4409e-16,0,3.125,-8.8818e-16,-8.8818e-16,15.625,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,0,50}
                });
            }
            else if (subdomainID == 2)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {100,1.7764e-15,0,-31.25,14.0625,-1.7764e-15,31.25,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,15.625,-8.8818e-16,0,-10.1563,3.5156,-11.7188,3.125,0,0,-6.25,-5.8594,-5.8594},
                    {1.7764e-15,100,0,-14.0625,15.625,8.8818e-16,0,-62.5,-1.7764e-15,-23.4375,-20.3125,-4.4409e-16,-8.8818e-16,15.625,-14.0625,-3.5156,1.5625,-3.5156,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                    {0,0,100,1.7764e-15,-8.8818e-16,15.625,-8.8818e-16,5.3291e-15,31.25,-4.4409e-16,-8.8818e-16,3.125,0,14.0625,-31.25,-11.7188,3.5156,-10.1563,4.4409e-16,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                    {-31.25,-14.0625,1.7764e-15,50,-23.4375,1.7764e-15,-20.3125,23.4375,-4.4409e-16,15.625,14.0625,8.8818e-16,-10.1563,-3.5156,11.7188,7.8125,-5.8594,7.0313,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                    {14.0625,15.625,-8.8818e-16,-23.4375,50,-1.7764e-15,23.4375,-20.3125,-8.8818e-16,-14.0625,-31.25,-8.8818e-16,3.5156,1.5625,-3.5156,-5.8594,7.8125,-7.0313,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                    {-1.7764e-15,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,50,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625,11.7188,3.5156,-10.1563,-7.0313,7.0313,-15.625,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                    {31.25,0,-8.8818e-16,-20.3125,23.4375,4.4409e-16,200,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-2.6645e-15,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375},
                    {-8.8818e-16,-62.5,5.3291e-15,23.4375,-20.3125,-8.8818e-16,1.7764e-15,200,3.5527e-15,-8.8818e-16,31.25,3.5527e-15,0,-20.3125,23.4375,5.8594,-6.25,5.8594,8.8818e-16,31.25,3.5527e-15,0,3.125,4.4409e-16},
                    {-8.8818e-16,-1.7764e-15,31.25,-4.4409e-16,-8.8818e-16,3.125,3.5527e-15,3.5527e-15,200,1.7764e-15,7.1054e-15,31.25,4.4409e-16,23.4375,-20.3125,-5.8594,5.8594,-6.25,-2.6645e-15,-8.8818e-16,-62.5,-23.4375,4.4409e-16,-20.3125},
                    {-20.3125,-23.4375,-4.4409e-16,15.625,-14.0625,8.8818e-16,-62.5,-8.8818e-16,1.7764e-15,100,0,1.7764e-15,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625},
                    {-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,1.7764e-15,31.25,7.1054e-15,0,100,0,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,8.8818e-16,3.125,-4.4409e-16,8.8818e-16,15.625,0},
                    {4.4409e-16,-4.4409e-16,3.125,8.8818e-16,-8.8818e-16,15.625,-2.6645e-15,3.5527e-15,31.25,1.7764e-15,0,100,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,23.4375,4.4409e-16,-20.3125,-14.0625,0,-31.25},
                    {15.625,-8.8818e-16,0,-10.1563,3.5156,11.7188,3.125,0,4.4409e-16,-6.25,-5.8594,5.8594,50,0,0,-15.625,7.0313,-7.0313,15.625,0,-1.7764e-15,-10.1563,-11.7188,-3.5156},
                    {-8.8818e-16,15.625,14.0625,-3.5156,1.5625,3.5156,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,50,-23.4375,-7.0313,7.8125,-5.8594,-8.8818e-16,-31.25,-14.0625,-11.7188,-10.1563,-3.5156},
                    {0,-14.0625,-31.25,11.7188,-3.5156,-10.1563,0,23.4375,-20.3125,5.8594,5.8594,-6.25,0,-23.4375,50,7.0313,-5.8594,7.8125,-1.7764e-15,14.0625,15.625,3.5156,3.5156,1.5625},
                    {-10.1563,-3.5156,-11.7188,7.8125,-5.8594,-7.0313,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-15.625,-7.0313,7.0313,25,-11.7188,11.7188,-10.1563,11.7188,3.5156,7.8125,7.0313,5.8594},
                    {3.5156,1.5625,3.5156,-5.8594,7.8125,7.0313,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,7.0313,7.8125,-5.8594,-11.7188,25,-11.7188,11.7188,-10.1563,-3.5156,-7.0313,-15.625,-7.0313},
                    {-11.7188,-3.5156,-10.1563,7.0313,-7.0313,-15.625,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-7.0313,-5.8594,7.8125,11.7188,-11.7188,25,-3.5156,3.5156,1.5625,5.8594,7.0313,7.8125},
                    {3.125,-4.4409e-16,4.4409e-16,-6.25,5.8594,5.8594,31.25,8.8818e-16,-2.6645e-15,-20.3125,8.8818e-16,23.4375,15.625,-8.8818e-16,-1.7764e-15,-10.1563,11.7188,-3.5156,100,0,3.5527e-15,-31.25,0,-14.0625},
                    {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,-1.7764e-15,31.25,-8.8818e-16,0,3.125,4.4409e-16,0,-31.25,14.0625,11.7188,-10.1563,3.5156,0,100,1.7764e-15,1.7764e-15,15.625,8.8818e-16},
                    {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,0,3.5527e-15,-62.5,23.4375,-4.4409e-16,-20.3125,-1.7764e-15,-14.0625,15.625,3.5156,-3.5156,1.5625,3.5527e-15,1.7764e-15,100,14.0625,3.5527e-15,15.625},
                    {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-10.1563,-11.7188,3.5156,7.8125,-7.0313,5.8594,-31.25,1.7764e-15,14.0625,50,0,23.4375},
                    {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,4.4409e-16,3.125,4.4409e-16,-8.8818e-16,15.625,0,-11.7188,-10.1563,3.5156,7.0313,-15.625,7.0313,0,15.625,3.5527e-15,0,50,0},
                    {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-23.4375,4.4409e-16,-20.3125,14.0625,0,-31.25,-3.5156,-3.5156,1.5625,5.8594,-7.0313,7.8125,-14.0625,8.8818e-16,15.625,23.4375,0,50}
                });
            }
            else if (subdomainID == 3)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {50,0,-1.7764e-15,-15.625,7.0313,7.0313,15.625,0,8.8818e-16,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,0,-10.1563,3.5156,-11.7188,3.125,0,0,-6.25,-5.8594,-5.8594},
                    {0,50,23.4375,-7.0313,7.8125,5.8594,0,-31.25,14.0625,-11.7188,-10.1563,3.5156,-8.8818e-16,15.625,-14.0625,-3.5156,1.5625,-3.5156,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                    {-1.7764e-15,23.4375,50,-7.0313,5.8594,7.8125,8.8818e-16,-14.0625,15.625,-3.5156,-3.5156,1.5625,0,14.0625,-31.25,-11.7188,3.5156,-10.1563,4.4409e-16,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                    {-15.625,-7.0313,-7.0313,25,-11.7188,-11.7188,-10.1563,11.7188,-3.5156,7.8125,7.0313,-5.8594,-10.1563,-3.5156,11.7188,7.8125,-5.8594,7.0313,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                    {7.0313,7.8125,5.8594,-11.7188,25,11.7188,11.7188,-10.1563,3.5156,-7.0313,-15.625,7.0313,3.5156,1.5625,-3.5156,-5.8594,7.8125,-7.0313,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                    {7.0313,5.8594,7.8125,-11.7188,11.7188,25,3.5156,-3.5156,1.5625,-5.8594,-7.0313,7.8125,11.7188,3.5156,-10.1563,-7.0313,7.0313,-15.625,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                    {15.625,0,8.8818e-16,-10.1563,11.7188,3.5156,100,1.7764e-15,0,-31.25,0,14.0625,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375},
                    {0,-31.25,-14.0625,11.7188,-10.1563,-3.5156,1.7764e-15,100,0,8.8818e-16,15.625,1.7764e-15,0,-20.3125,23.4375,5.8594,-6.25,5.8594,8.8818e-16,31.25,3.5527e-15,0,3.125,4.4409e-16},
                    {8.8818e-16,14.0625,15.625,-3.5156,3.5156,1.5625,0,0,100,-14.0625,3.5527e-15,15.625,4.4409e-16,23.4375,-20.3125,-5.8594,5.8594,-6.25,-2.6645e-15,-8.8818e-16,-62.5,-23.4375,4.4409e-16,-20.3125},
                    {-10.1563,-11.7188,-3.5156,7.8125,-7.0313,-5.8594,-31.25,8.8818e-16,-14.0625,50,0,-23.4375,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625},
                    {-11.7188,-10.1563,-3.5156,7.0313,-15.625,-7.0313,0,15.625,3.5527e-15,0,50,0,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,8.8818e-16,3.125,-4.4409e-16,8.8818e-16,15.625,0},
                    {3.5156,3.5156,1.5625,-5.8594,7.0313,7.8125,14.0625,1.7764e-15,15.625,-23.4375,0,50,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,23.4375,4.4409e-16,-20.3125,-14.0625,0,-31.25},
                    {15.625,-8.8818e-16,0,-10.1563,3.5156,11.7188,3.125,0,4.4409e-16,-6.25,-5.8594,5.8594,100,0,-1.7764e-15,-31.25,14.0625,-8.8818e-16,31.25,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                    {-8.8818e-16,15.625,14.0625,-3.5156,1.5625,3.5156,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,100,0,-14.0625,15.625,8.8818e-16,-8.8818e-16,-62.5,-1.7764e-15,-23.4375,-20.3125,0},
                    {0,-14.0625,-31.25,11.7188,-3.5156,-10.1563,0,23.4375,-20.3125,5.8594,5.8594,-6.25,-1.7764e-15,0,100,1.7764e-15,-1.7764e-15,15.625,-8.8818e-16,4.4409e-15,31.25,-4.4409e-16,-8.8818e-16,3.125},
                    {-10.1563,-3.5156,-11.7188,7.8125,-5.8594,-7.0313,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-31.25,-14.0625,1.7764e-15,50,-23.4375,1.7764e-15,-20.3125,23.4375,-4.4409e-16,15.625,14.0625,8.8818e-16},
                    {3.5156,1.5625,3.5156,-5.8594,7.8125,7.0313,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,14.0625,15.625,-1.7764e-15,-23.4375,50,-1.7764e-15,23.4375,-20.3125,-4.4409e-16,-14.0625,-31.25,0},
                    {-11.7188,-3.5156,-10.1563,7.0313,-7.0313,-15.625,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,50,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625},
                    {3.125,-4.4409e-16,4.4409e-16,-6.25,5.8594,5.8594,31.25,8.8818e-16,-2.6645e-15,-20.3125,8.8818e-16,23.4375,31.25,-8.8818e-16,-8.8818e-16,-20.3125,23.4375,4.4409e-16,200,0,5.3291e-15,-62.5,8.8818e-16,-2.6645e-15},
                    {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,-1.7764e-15,31.25,-8.8818e-16,0,3.125,4.4409e-16,-8.8818e-16,-62.5,4.4409e-15,23.4375,-20.3125,-8.8818e-16,0,200,1.7764e-15,8.8818e-16,31.25,2.6645e-15},
                    {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,0,3.5527e-15,-62.5,23.4375,-4.4409e-16,-20.3125,-8.8818e-16,-1.7764e-15,31.25,-4.4409e-16,-4.4409e-16,3.125,5.3291e-15,1.7764e-15,200,2.6645e-15,6.2172e-15,31.25},
                    {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-20.3125,-23.4375,-4.4409e-16,15.625,-14.0625,8.8818e-16,-62.5,8.8818e-16,2.6645e-15,100,0,1.7764e-15},
                    {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,4.4409e-16,3.125,4.4409e-16,-8.8818e-16,15.625,0,-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,8.8818e-16,31.25,6.2172e-15,0,100,0},
                    {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-23.4375,4.4409e-16,-20.3125,14.0625,0,-31.25,4.4409e-16,0,3.125,8.8818e-16,0,15.625,-2.6645e-15,2.6645e-15,31.25,1.7764e-15,0,100}
                });
            }
            else if (subdomainID == 4)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {100,1.7764e-15,1.7764e-15,-62.5,1.7764e-15,-3.5527e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                    {1.7764e-15,100,1.7764e-15,-8.8818e-16,31.25,2.6645e-15,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,-4.4409e-16,-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                    {1.7764e-15,1.7764e-15,100,4.4409e-15,0,31.25,-8.8818e-16,2.6645e-15,15.625,0,-8.8818e-16,3.125,14.0625,0,-31.25,-23.4375,-4.4409e-16,-20.3125,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                    {-62.5,-8.8818e-16,4.4409e-15,200,-5.3291e-15,7.1054e-15,-20.3125,23.4375,4.4409e-16,31.25,-1.7764e-15,-8.8818e-16,-20.3125,0,23.4375,31.25,-2.6645e-15,-2.6645e-15,-6.25,5.8594,5.8594,3.125,0,0},
                    {1.7764e-15,31.25,0,-5.3291e-15,200,0,23.4375,-20.3125,-4.4409e-16,-1.7764e-15,-62.5,-2.6645e-15,8.8818e-16,3.125,0,0,31.25,1.7764e-15,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                    {-3.5527e-15,2.6645e-15,31.25,7.1054e-15,0,200,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,3.5527e-15,31.25,23.4375,0,-20.3125,0,0,-62.5,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                    {15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,50,-23.4375,0,-31.25,-14.0625,-8.8818e-16,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,7.8125,-5.8594,-7.0313,-10.1563,-3.5156,-11.7188},
                    {-14.0625,-31.25,2.6645e-15,23.4375,-20.3125,-8.8818e-16,-23.4375,50,0,14.0625,15.625,1.7764e-15,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,-5.8594,7.8125,7.0313,3.5156,1.5625,3.5156},
                    {-8.8818e-16,-8.8818e-16,15.625,4.4409e-16,-4.4409e-16,3.125,0,0,50,8.8818e-16,1.7764e-15,15.625,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,7.0313,-7.0313,-15.625,-11.7188,-3.5156,-10.1563},
                    {-20.3125,-23.4375,0,31.25,-1.7764e-15,8.8818e-16,-31.25,14.0625,8.8818e-16,100,-3.5527e-15,1.7764e-15,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,11.7188,15.625,-1.7764e-15,0},
                    {-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,-14.0625,15.625,1.7764e-15,-3.5527e-15,100,0,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,-3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625},
                    {4.4409e-16,-4.4409e-16,3.125,-8.8818e-16,-2.6645e-15,31.25,-8.8818e-16,1.7764e-15,15.625,1.7764e-15,0,100,5.8594,5.8594,-6.25,0,23.4375,-20.3125,11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25},
                    {15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,50,0,-23.4375,-31.25,0,-14.0625,7.8125,-7.0313,-5.8594,-10.1563,-11.7188,-3.5156},
                    {-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,0,50,0,0,15.625,8.8818e-16,7.0313,-15.625,-7.0313,-11.7188,-10.1563,-3.5156},
                    {-14.0625,0,-31.25,23.4375,0,-20.3125,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,-23.4375,0,50,14.0625,-1.7764e-15,15.625,-5.8594,7.0313,7.8125,3.5156,3.5156,1.5625},
                    {-20.3125,0,-23.4375,31.25,0,0,-6.25,5.8594,-5.8594,3.125,0,0,-31.25,0,14.0625,100,-1.7764e-15,3.5527e-15,-10.1563,11.7188,3.5156,15.625,-8.8818e-16,0},
                    {4.4409e-16,3.125,-4.4409e-16,-2.6645e-15,31.25,0,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,0,15.625,-1.7764e-15,-1.7764e-15,100,1.7764e-15,11.7188,-10.1563,-3.5156,-8.8818e-16,-31.25,-14.0625},
                    {-23.4375,0,-20.3125,-2.6645e-15,1.7764e-15,-62.5,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-14.0625,8.8818e-16,15.625,3.5527e-15,1.7764e-15,100,-3.5156,3.5156,1.5625,0,14.0625,15.625},
                    {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,7.8125,-5.8594,7.0313,-10.1563,-3.5156,11.7188,7.8125,7.0313,-5.8594,-10.1563,11.7188,-3.5156,25,-11.7188,-11.7188,-15.625,-7.0313,-7.0313},
                    {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,-5.8594,7.8125,-7.0313,3.5156,1.5625,-3.5156,-7.0313,-15.625,7.0313,11.7188,-10.1563,3.5156,-11.7188,25,11.7188,7.0313,7.8125,5.8594},
                    {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,-7.0313,7.0313,-15.625,11.7188,3.5156,-10.1563,-5.8594,-7.0313,7.8125,3.5156,-3.5156,1.5625,-11.7188,11.7188,25,7.0313,5.8594,7.8125},
                    {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,-11.7188,15.625,-8.8818e-16,-8.8818e-16,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,0,-15.625,7.0313,7.0313,50,-1.7764e-15,1.7764e-15},
                    {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,-3.5156,1.5625,-3.5156,-1.7764e-15,15.625,-14.0625,-11.7188,-10.1563,3.5156,-8.8818e-16,-31.25,14.0625,-7.0313,7.8125,5.8594,-1.7764e-15,50,23.4375},
                    {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-11.7188,3.5156,-10.1563,0,14.0625,-31.25,-3.5156,-3.5156,1.5625,0,-14.0625,15.625,-7.0313,5.8594,7.8125,1.7764e-15,23.4375,50}
                });
            }
            else if (subdomainID == 5)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {50,1.7764e-15,23.4375,-31.25,0,14.0625,7.8125,-7.0313,5.8594,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                    {1.7764e-15,50,0,8.8818e-16,15.625,1.7764e-15,7.0313,-15.625,7.0313,-11.7188,-10.1563,3.5156,-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                    {23.4375,0,50,-14.0625,1.7764e-15,15.625,5.8594,-7.0313,7.8125,-3.5156,-3.5156,1.5625,14.0625,0,-31.25,-23.4375,-4.4409e-16,-20.3125,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                    {-31.25,8.8818e-16,-14.0625,100,-1.7764e-15,-1.7764e-15,-10.1563,11.7188,-3.5156,15.625,0,-8.8818e-16,-20.3125,0,23.4375,31.25,-2.6645e-15,-2.6645e-15,-6.25,5.8594,5.8594,3.125,0,0},
                    {0,15.625,1.7764e-15,-1.7764e-15,100,-1.7764e-15,11.7188,-10.1563,3.5156,0,-31.25,14.0625,8.8818e-16,3.125,0,0,31.25,1.7764e-15,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                    {14.0625,1.7764e-15,15.625,-1.7764e-15,-1.7764e-15,100,3.5156,-3.5156,1.5625,8.8818e-16,-14.0625,15.625,23.4375,0,-20.3125,0,0,-62.5,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                    {7.8125,7.0313,5.8594,-10.1563,11.7188,3.5156,25,-11.7188,11.7188,-15.625,-7.0313,7.0313,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,7.8125,-5.8594,-7.0313,-10.1563,-3.5156,-11.7188},
                    {-7.0313,-15.625,-7.0313,11.7188,-10.1563,-3.5156,-11.7188,25,-11.7188,7.0313,7.8125,-5.8594,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,-5.8594,7.8125,7.0313,3.5156,1.5625,3.5156},
                    {5.8594,7.0313,7.8125,-3.5156,3.5156,1.5625,11.7188,-11.7188,25,-7.0313,-5.8594,7.8125,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,7.0313,-7.0313,-15.625,-11.7188,-3.5156,-10.1563},
                    {-10.1563,-11.7188,-3.5156,15.625,0,8.8818e-16,-15.625,7.0313,-7.0313,50,0,0,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,11.7188,15.625,-1.7764e-15,0},
                    {-11.7188,-10.1563,-3.5156,0,-31.25,-14.0625,-7.0313,7.8125,-5.8594,0,50,-23.4375,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,-3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625},
                    {3.5156,3.5156,1.5625,-8.8818e-16,14.0625,15.625,7.0313,-5.8594,7.8125,0,-23.4375,50,5.8594,5.8594,-6.25,0,23.4375,-20.3125,11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25},
                    {15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,100,0,1.7764e-15,-62.5,8.8818e-16,-2.6645e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                    {-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,0,100,0,-8.8818e-16,31.25,2.6645e-15,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,0},
                    {-14.0625,0,-31.25,23.4375,0,-20.3125,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,1.7764e-15,0,100,4.4409e-15,-8.8818e-16,31.25,-8.8818e-16,3.5527e-15,15.625,0,-8.8818e-16,3.125},
                    {-20.3125,0,-23.4375,31.25,0,0,-6.25,5.8594,-5.8594,3.125,0,0,-62.5,-8.8818e-16,4.4409e-15,200,0,5.3291e-15,-20.3125,23.4375,0,31.25,-1.7764e-15,-8.8818e-16},
                    {4.4409e-16,3.125,-4.4409e-16,-2.6645e-15,31.25,0,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,8.8818e-16,31.25,-8.8818e-16,0,200,0,23.4375,-20.3125,0,0,-62.5,-2.6645e-15},
                    {-23.4375,0,-20.3125,-2.6645e-15,1.7764e-15,-62.5,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-2.6645e-15,2.6645e-15,31.25,5.3291e-15,0,200,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,3.5527e-15,31.25},
                    {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,7.8125,-5.8594,7.0313,-10.1563,-3.5156,11.7188,15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,50,-23.4375,0,-31.25,-14.0625,-8.8818e-16},
                    {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,-5.8594,7.8125,-7.0313,3.5156,1.5625,-3.5156,-14.0625,-31.25,3.5527e-15,23.4375,-20.3125,-8.8818e-16,-23.4375,50,-1.7764e-15,14.0625,15.625,8.8818e-16},
                    {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,-7.0313,7.0313,-15.625,11.7188,3.5156,-10.1563,-8.8818e-16,-8.8818e-16,15.625,0,0,3.125,0,-1.7764e-15,50,1.7764e-15,1.7764e-15,15.625},
                    {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,-11.7188,15.625,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,0,31.25,0,8.8818e-16,-31.25,14.0625,1.7764e-15,100,-1.7764e-15,1.7764e-15},
                    {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,-3.5156,1.5625,-3.5156,-1.7764e-15,15.625,-14.0625,-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,-14.0625,15.625,1.7764e-15,-1.7764e-15,100,0},
                    {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-11.7188,3.5156,-10.1563,0,14.0625,-31.25,4.4409e-16,0,3.125,-8.8818e-16,-2.6645e-15,31.25,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,0,100}
                });
            }
            else if (subdomainID == 6)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {50,23.4375,0,-31.25,14.0625,-1.7764e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,7.8125,5.8594,-7.0313,-10.1563,3.5156,-11.7188,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                    {23.4375,50,1.7764e-15,-14.0625,15.625,8.8818e-16,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,-4.4409e-16,5.8594,7.8125,-7.0313,-3.5156,1.5625,-3.5156,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                    {0,1.7764e-15,50,1.7764e-15,-8.8818e-16,15.625,-8.8818e-16,3.5527e-15,15.625,-4.4409e-16,-8.8818e-16,3.125,7.0313,7.0313,-15.625,-11.7188,3.5156,-10.1563,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                    {-31.25,-14.0625,1.7764e-15,100,-1.7764e-15,1.7764e-15,-20.3125,23.4375,-4.4409e-16,31.25,-1.7764e-15,8.8818e-16,-10.1563,-3.5156,11.7188,15.625,-8.8818e-16,-8.8818e-16,-6.25,5.8594,5.8594,3.125,0,0},
                    {14.0625,15.625,-8.8818e-16,-1.7764e-15,100,-1.7764e-15,23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,-2.6645e-15,3.5156,1.5625,-3.5156,-8.8818e-16,15.625,-14.0625,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                    {-1.7764e-15,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,100,4.4409e-16,-8.8818e-16,3.125,1.7764e-15,3.5527e-15,31.25,11.7188,3.5156,-10.1563,0,14.0625,-31.25,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                    {15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-2.6645e-15,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375},
                    {-14.0625,-31.25,3.5527e-15,23.4375,-20.3125,-8.8818e-16,1.7764e-15,100,1.7764e-15,-8.8818e-16,31.25,3.5527e-15,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,-8.8818e-16,15.625,8.8818e-16,0,3.125,4.4409e-16},
                    {-8.8818e-16,-8.8818e-16,15.625,-4.4409e-16,-8.8818e-16,3.125,3.5527e-15,1.7764e-15,100,1.7764e-15,7.1054e-15,31.25,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,14.0625,-8.8818e-16,-31.25,-23.4375,4.4409e-16,-20.3125},
                    {-20.3125,-23.4375,-4.4409e-16,31.25,-1.7764e-15,1.7764e-15,-62.5,-8.8818e-16,1.7764e-15,200,-3.5527e-15,3.5527e-15,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-20.3125,0,23.4375,31.25,-2.6645e-15,0},
                    {-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,1.7764e-15,31.25,7.1054e-15,-3.5527e-15,200,3.5527e-15,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,8.8818e-16,3.125,-4.4409e-16,0,31.25,8.8818e-16},
                    {4.4409e-16,-4.4409e-16,3.125,8.8818e-16,-2.6645e-15,31.25,-2.6645e-15,3.5527e-15,31.25,3.5527e-15,3.5527e-15,200,5.8594,5.8594,-6.25,4.4409e-16,23.4375,-20.3125,23.4375,4.4409e-16,-20.3125,8.8818e-16,-1.7764e-15,-62.5},
                    {7.8125,5.8594,7.0313,-10.1563,3.5156,11.7188,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,25,11.7188,-11.7188,-15.625,7.0313,-7.0313,7.8125,-7.0313,-5.8594,-10.1563,-11.7188,-3.5156},
                    {5.8594,7.8125,7.0313,-3.5156,1.5625,3.5156,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,11.7188,25,-11.7188,-7.0313,7.8125,-5.8594,7.0313,-15.625,-7.0313,-11.7188,-10.1563,-3.5156},
                    {-7.0313,-7.0313,-15.625,11.7188,-3.5156,-10.1563,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,-11.7188,-11.7188,25,7.0313,-5.8594,7.8125,-5.8594,7.0313,7.8125,3.5156,3.5156,1.5625},
                    {-10.1563,-3.5156,-11.7188,15.625,-8.8818e-16,0,-6.25,5.8594,-5.8594,3.125,0,4.4409e-16,-15.625,-7.0313,7.0313,50,0,0,-10.1563,11.7188,3.5156,15.625,-8.8818e-16,0},
                    {3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,7.0313,7.8125,-5.8594,0,50,-23.4375,11.7188,-10.1563,-3.5156,-8.8818e-16,-31.25,-14.0625},
                    {-11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-7.0313,-5.8594,7.8125,0,-23.4375,50,-3.5156,3.5156,1.5625,0,14.0625,15.625},
                    {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,7.8125,7.0313,-5.8594,-10.1563,11.7188,-3.5156,50,0,-23.4375,-31.25,0,-14.0625},
                    {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,-8.8818e-16,15.625,-8.8818e-16,0,3.125,4.4409e-16,-7.0313,-15.625,7.0313,11.7188,-10.1563,3.5156,0,50,0,1.7764e-15,15.625,8.8818e-16},
                    {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,-14.0625,8.8818e-16,-31.25,23.4375,-4.4409e-16,-20.3125,-5.8594,-7.0313,7.8125,3.5156,-3.5156,1.5625,-23.4375,0,50,14.0625,3.5527e-15,15.625},
                    {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-20.3125,0,-23.4375,31.25,0,8.8818e-16,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,0,-31.25,1.7764e-15,14.0625,100,-1.7764e-15,1.7764e-15},
                    {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,4.4409e-16,3.125,4.4409e-16,-2.6645e-15,31.25,-1.7764e-15,-11.7188,-10.1563,3.5156,-8.8818e-16,-31.25,14.0625,0,15.625,3.5527e-15,-1.7764e-15,100,3.5527e-15},
                    {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-23.4375,4.4409e-16,-20.3125,0,8.8818e-16,-62.5,-3.5156,-3.5156,1.5625,0,-14.0625,15.625,-14.0625,8.8818e-16,15.625,1.7764e-15,3.5527e-15,100}
                });
            }
            else if (subdomainID == 7)
            {
                return Matrix.CreateFromArray(new double[24, 24]
                {
                    {25,11.7188,11.7188,-15.625,7.0313,7.0313,7.8125,-7.0313,5.8594,-10.1563,-11.7188,3.5156,7.8125,5.8594,-7.0313,-10.1563,3.5156,-11.7188,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                    {11.7188,25,11.7188,-7.0313,7.8125,5.8594,7.0313,-15.625,7.0313,-11.7188,-10.1563,3.5156,5.8594,7.8125,-7.0313,-3.5156,1.5625,-3.5156,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                    {11.7188,11.7188,25,-7.0313,5.8594,7.8125,5.8594,-7.0313,7.8125,-3.5156,-3.5156,1.5625,7.0313,7.0313,-15.625,-11.7188,3.5156,-10.1563,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                    {-15.625,-7.0313,-7.0313,50,-1.7764e-15,0,-10.1563,11.7188,-3.5156,15.625,0,8.8818e-16,-10.1563,-3.5156,11.7188,15.625,-8.8818e-16,-8.8818e-16,-6.25,5.8594,5.8594,3.125,0,0},
                    {7.0313,7.8125,5.8594,-1.7764e-15,50,23.4375,11.7188,-10.1563,3.5156,0,-31.25,14.0625,3.5156,1.5625,-3.5156,-8.8818e-16,15.625,-14.0625,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                    {7.0313,5.8594,7.8125,0,23.4375,50,3.5156,-3.5156,1.5625,1.7764e-15,-14.0625,15.625,11.7188,3.5156,-10.1563,0,14.0625,-31.25,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                    {7.8125,7.0313,5.8594,-10.1563,11.7188,3.5156,50,1.7764e-15,23.4375,-31.25,0,14.0625,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375},
                    {-7.0313,-15.625,-7.0313,11.7188,-10.1563,-3.5156,1.7764e-15,50,0,8.8818e-16,15.625,1.7764e-15,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,-8.8818e-16,15.625,8.8818e-16,0,3.125,4.4409e-16},
                    {5.8594,7.0313,7.8125,-3.5156,3.5156,1.5625,23.4375,0,50,-14.0625,3.5527e-15,15.625,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,14.0625,-8.8818e-16,-31.25,-23.4375,4.4409e-16,-20.3125},
                    {-10.1563,-11.7188,-3.5156,15.625,0,1.7764e-15,-31.25,8.8818e-16,-14.0625,100,-1.7764e-15,0,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-20.3125,0,23.4375,31.25,-2.6645e-15,0},
                    {-11.7188,-10.1563,-3.5156,0,-31.25,-14.0625,0,15.625,3.5527e-15,-1.7764e-15,100,0,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,8.8818e-16,3.125,-4.4409e-16,0,31.25,8.8818e-16},
                    {3.5156,3.5156,1.5625,8.8818e-16,14.0625,15.625,14.0625,1.7764e-15,15.625,0,0,100,5.8594,5.8594,-6.25,4.4409e-16,23.4375,-20.3125,23.4375,4.4409e-16,-20.3125,8.8818e-16,-1.7764e-15,-62.5},
                    {7.8125,5.8594,7.0313,-10.1563,3.5156,11.7188,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,50,23.4375,-1.7764e-15,-31.25,14.0625,-8.8818e-16,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                    {5.8594,7.8125,7.0313,-3.5156,1.5625,3.5156,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,23.4375,50,1.7764e-15,-14.0625,15.625,8.8818e-16,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,0},
                    {-7.0313,-7.0313,-15.625,11.7188,-3.5156,-10.1563,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,-1.7764e-15,1.7764e-15,50,1.7764e-15,-1.7764e-15,15.625,-8.8818e-16,2.6645e-15,15.625,-4.4409e-16,-8.8818e-16,3.125},
                    {-10.1563,-3.5156,-11.7188,15.625,-8.8818e-16,0,-6.25,5.8594,-5.8594,3.125,0,4.4409e-16,-31.25,-14.0625,1.7764e-15,100,0,0,-20.3125,23.4375,-4.4409e-16,31.25,-1.7764e-15,8.8818e-16},
                    {3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,14.0625,15.625,-1.7764e-15,0,100,-1.7764e-15,23.4375,-20.3125,-4.4409e-16,0,-62.5,-1.7764e-15},
                    {-11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-8.8818e-16,8.8818e-16,15.625,0,-1.7764e-15,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,2.6645e-15,31.25},
                    {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,3.5527e-15,-62.5,8.8818e-16,-2.6645e-15},
                    {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,-8.8818e-16,15.625,-8.8818e-16,0,3.125,4.4409e-16,-14.0625,-31.25,2.6645e-15,23.4375,-20.3125,-8.8818e-16,0,100,0,8.8818e-16,31.25,2.6645e-15},
                    {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,-14.0625,8.8818e-16,-31.25,23.4375,-4.4409e-16,-20.3125,-8.8818e-16,-8.8818e-16,15.625,-4.4409e-16,-4.4409e-16,3.125,3.5527e-15,0,100,2.6645e-15,6.2172e-15,31.25},
                    {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-20.3125,0,-23.4375,31.25,0,8.8818e-16,-20.3125,-23.4375,-4.4409e-16,31.25,0,8.8818e-16,-62.5,8.8818e-16,2.6645e-15,200,-1.7764e-15,3.5527e-15},
                    {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,4.4409e-16,3.125,4.4409e-16,-2.6645e-15,31.25,-1.7764e-15,-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,2.6645e-15,8.8818e-16,31.25,6.2172e-15,-1.7764e-15,200,3.5527e-15},
                    {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-23.4375,4.4409e-16,-20.3125,0,8.8818e-16,-62.5,4.4409e-16,0,3.125,8.8818e-16,-1.7764e-15,31.25,-2.6645e-15,2.6645e-15,31.25,3.5527e-15,3.5527e-15,200}
                });
            }
            else throw new ArgumentException("Subdomain ID must be in [0, 8)");
        }

        public static Matrix GetMatrixKii(int subdomainID)
        {
            int[] internalDofs = ExpectedConnectivityData.GetDofsInternalInRemainder(subdomainID);
            return GetMatrixKrr(subdomainID).GetSubmatrix(internalDofs, internalDofs);
        }

        public static Matrix GetMatrixKrr(int subdomainID)
        {
            if (subdomainID == 0)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{200,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-4.4409e-15,31.25,-8.8818e-16,-2.6645e-15,-20.3125,-23.4375,4.4409e-16,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375,3.125,0,0},
                {1.7764e-15,200,1.7764e-15,-8.8818e-16,31.25,2.6645e-15,0,-62.5,-2.6645e-15,-23.4375,-20.3125,-4.4409e-16,8.8818e-16,31.25,1.7764e-15,0,3.125,0,-4.4409e-16,-20.3125,-23.4375},
                {3.5527e-15,1.7764e-15,200,3.5527e-15,-1.7764e-15,31.25,-8.8818e-16,4.4409e-15,31.25,0,-8.8818e-16,3.125,8.8818e-16,-8.8818e-16,-62.5,-23.4375,-4.4409e-16,-20.3125,0,-23.4375,-20.3125},
                {-62.5,-8.8818e-16,3.5527e-15,100,0,3.5527e-15,-20.3125,23.4375,4.4409e-16,15.625,14.0625,-8.8818e-16,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625,-6.25,5.8594,5.8594},
                {1.7764e-15,31.25,-1.7764e-15,0,100,0,23.4375,-20.3125,-4.4409e-16,-14.0625,-31.25,-8.8818e-16,8.8818e-16,3.125,0,8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,-5.8594},
                {-4.4409e-15,2.6645e-15,31.25,3.5527e-15,0,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,2.6645e-15,15.625,23.4375,0,-20.3125,-14.0625,8.8818e-16,-31.25,5.8594,-5.8594,-6.25},
                {31.25,0,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,0,-31.25,-14.0625,-8.8818e-16,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,15.625,8.8818e-16,8.8818e-16},
                {-8.8818e-16,-62.5,4.4409e-15,23.4375,-20.3125,-8.8818e-16,0,100,1.7764e-15,14.0625,15.625,1.7764e-15,0,-20.3125,23.4375,5.8594,-6.25,5.8594,1.7764e-15,15.625,14.0625},
                {-2.6645e-15,-2.6645e-15,31.25,4.4409e-16,-4.4409e-16,3.125,0,1.7764e-15,100,8.8818e-16,1.7764e-15,15.625,0,23.4375,-20.3125,-5.8594,5.8594,-6.25,0,-14.0625,-31.25},
                {-20.3125,-23.4375,0,15.625,-14.0625,8.8818e-16,-31.25,14.0625,8.8818e-16,50,23.4375,1.7764e-15,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-10.1563,3.5156,11.7188},
                {-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,2.6645e-15,-14.0625,15.625,1.7764e-15,23.4375,50,0,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,-3.5156,1.5625,3.5156},
                {4.4409e-16,-4.4409e-16,3.125,-8.8818e-16,-8.8818e-16,15.625,-8.8818e-16,1.7764e-15,15.625,1.7764e-15,0,50,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,11.7188,-3.5156,-10.1563},
                {31.25,8.8818e-16,8.8818e-16,-20.3125,8.8818e-16,23.4375,3.125,0,0,-6.25,-5.8594,5.8594,100,0,3.5527e-15,-31.25,0,-14.0625,15.625,0,-1.7764e-15},
                {-1.7764e-15,31.25,-8.8818e-16,0,3.125,0,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,100,0,0,15.625,8.8818e-16,-8.8818e-16,-31.25,-14.0625},
                {0,1.7764e-15,-62.5,23.4375,0,-20.3125,0,23.4375,-20.3125,5.8594,5.8594,-6.25,3.5527e-15,0,100,14.0625,-1.7764e-15,15.625,-1.7764e-15,14.0625,15.625},
                {-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-31.25,0,14.0625,50,0,23.4375,-10.1563,11.7188,3.5156},
                {4.4409e-16,3.125,-4.4409e-16,-8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,0,15.625,-1.7764e-15,0,50,0,11.7188,-10.1563,-3.5156},
                {-23.4375,0,-20.3125,14.0625,8.8818e-16,-31.25,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-14.0625,8.8818e-16,15.625,23.4375,0,50,-3.5156,3.5156,1.5625},
                {3.125,-4.4409e-16,0,-6.25,5.8594,5.8594,15.625,1.7764e-15,0,-10.1563,-3.5156,11.7188,15.625,-8.8818e-16,-1.7764e-15,-10.1563,11.7188,-3.5156,50,0,1.7764e-15},
                {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,8.8818e-16,15.625,-14.0625,3.5156,1.5625,-3.5156,0,-31.25,14.0625,11.7188,-10.1563,3.5156,0,50,23.4375},
                {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,8.8818e-16,14.0625,-31.25,11.7188,3.5156,-10.1563,-1.7764e-15,-14.0625,15.625,3.5156,-3.5156,1.5625,1.7764e-15,23.4375,50}});
            }
            else if (subdomainID == 1)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{100,1.7764e-15,-1.7764e-15,-31.25,0,14.0625,15.625,0,-8.8818e-16,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375,3.125,0,0,-6.25,-5.8594,-5.8594},
                {1.7764e-15,100,0,8.8818e-16,15.625,1.7764e-15,0,-31.25,14.0625,8.8818e-16,31.25,1.7764e-15,0,3.125,0,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                {-1.7764e-15,0,100,-14.0625,0,15.625,8.8818e-16,-14.0625,15.625,8.8818e-16,-8.8818e-16,-62.5,-23.4375,-4.4409e-16,-20.3125,0,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                {-31.25,8.8818e-16,-14.0625,50,0,-23.4375,-10.1563,11.7188,-3.5156,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                {0,15.625,0,0,50,0,11.7188,-10.1563,3.5156,8.8818e-16,3.125,0,8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                {14.0625,1.7764e-15,15.625,-23.4375,0,50,3.5156,-3.5156,1.5625,23.4375,0,-20.3125,-14.0625,8.8818e-16,-31.25,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                {15.625,0,8.8818e-16,-10.1563,11.7188,3.5156,50,1.7764e-15,-1.7764e-15,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,15.625,8.8818e-16,8.8818e-16,-10.1563,-3.5156,-11.7188},
                {0,-31.25,-14.0625,11.7188,-10.1563,-3.5156,1.7764e-15,50,-23.4375,0,-20.3125,23.4375,5.8594,-6.25,5.8594,1.7764e-15,15.625,14.0625,3.5156,1.5625,3.5156},
                {-8.8818e-16,14.0625,15.625,-3.5156,3.5156,1.5625,-1.7764e-15,-23.4375,50,0,23.4375,-20.3125,-5.8594,5.8594,-6.25,0,-14.0625,-31.25,-11.7188,-3.5156,-10.1563},
                {31.25,8.8818e-16,8.8818e-16,-20.3125,8.8818e-16,23.4375,3.125,0,0,200,0,5.3291e-15,-62.5,8.8818e-16,-3.5527e-15,31.25,-8.8818e-16,-2.6645e-15,-20.3125,-23.4375,4.4409e-16},
                {-1.7764e-15,31.25,-8.8818e-16,0,3.125,0,-4.4409e-16,-20.3125,23.4375,0,200,0,-8.8818e-16,31.25,2.6645e-15,-8.8818e-16,-62.5,-2.6645e-15,-23.4375,-20.3125,0},
                {0,1.7764e-15,-62.5,23.4375,0,-20.3125,0,23.4375,-20.3125,5.3291e-15,0,200,4.4409e-15,-2.6645e-15,31.25,-8.8818e-16,5.3291e-15,31.25,0,-8.8818e-16,3.125},
                {-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-6.25,5.8594,-5.8594,-62.5,-8.8818e-16,4.4409e-15,100,0,3.5527e-15,-20.3125,23.4375,0,15.625,14.0625,-8.8818e-16},
                {4.4409e-16,3.125,-4.4409e-16,-8.8818e-16,15.625,8.8818e-16,5.8594,-6.25,5.8594,8.8818e-16,31.25,-2.6645e-15,0,100,0,23.4375,-20.3125,0,-14.0625,-31.25,-8.8818e-16},
                {-23.4375,0,-20.3125,14.0625,8.8818e-16,-31.25,-5.8594,5.8594,-6.25,-3.5527e-15,2.6645e-15,31.25,3.5527e-15,0,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625},
                {3.125,-4.4409e-16,0,-6.25,5.8594,5.8594,15.625,1.7764e-15,0,31.25,-8.8818e-16,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,1.7764e-15,-31.25,-14.0625,-8.8818e-16},
                {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,8.8818e-16,15.625,-14.0625,-8.8818e-16,-62.5,5.3291e-15,23.4375,-20.3125,-8.8818e-16,0,100,0,14.0625,15.625,8.8818e-16},
                {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,8.8818e-16,14.0625,-31.25,-2.6645e-15,-2.6645e-15,31.25,0,0,3.125,1.7764e-15,0,100,1.7764e-15,1.7764e-15,15.625},
                {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-10.1563,3.5156,-11.7188,-20.3125,-23.4375,0,15.625,-14.0625,8.8818e-16,-31.25,14.0625,1.7764e-15,50,23.4375,1.7764e-15},
                {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,-3.5156,1.5625,-3.5156,-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,-14.0625,15.625,1.7764e-15,23.4375,50,0},
                {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-11.7188,3.5156,-10.1563,4.4409e-16,0,3.125,-8.8818e-16,-8.8818e-16,15.625,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,0,50}});
            }
            else if (subdomainID == 2)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{100,1.7764e-15,0,-31.25,14.0625,-1.7764e-15,31.25,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,15.625,-8.8818e-16,0,3.125,0,0,-6.25,-5.8594,-5.8594},
                {1.7764e-15,100,0,-14.0625,15.625,8.8818e-16,0,-62.5,-1.7764e-15,-23.4375,-20.3125,-4.4409e-16,-8.8818e-16,15.625,-14.0625,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                {0,0,100,1.7764e-15,-8.8818e-16,15.625,-8.8818e-16,5.3291e-15,31.25,-4.4409e-16,-8.8818e-16,3.125,0,14.0625,-31.25,4.4409e-16,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                {-31.25,-14.0625,1.7764e-15,50,-23.4375,1.7764e-15,-20.3125,23.4375,-4.4409e-16,15.625,14.0625,8.8818e-16,-10.1563,-3.5156,11.7188,-6.25,5.8594,5.8594,1.5625,3.5156,3.5156},
                {14.0625,15.625,-8.8818e-16,-23.4375,50,-1.7764e-15,23.4375,-20.3125,-8.8818e-16,-14.0625,-31.25,-8.8818e-16,3.5156,1.5625,-3.5156,5.8594,-6.25,-5.8594,-3.5156,-10.1563,-11.7188},
                {-1.7764e-15,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,50,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625,11.7188,3.5156,-10.1563,5.8594,-5.8594,-6.25,-3.5156,-11.7188,-10.1563},
                {31.25,0,-8.8818e-16,-20.3125,23.4375,4.4409e-16,200,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-2.6645e-15,3.125,-4.4409e-16,0,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375},
                {-8.8818e-16,-62.5,5.3291e-15,23.4375,-20.3125,-8.8818e-16,1.7764e-15,200,3.5527e-15,-8.8818e-16,31.25,3.5527e-15,0,-20.3125,23.4375,8.8818e-16,31.25,3.5527e-15,0,3.125,4.4409e-16},
                {-8.8818e-16,-1.7764e-15,31.25,-4.4409e-16,-8.8818e-16,3.125,3.5527e-15,3.5527e-15,200,1.7764e-15,7.1054e-15,31.25,4.4409e-16,23.4375,-20.3125,-2.6645e-15,-8.8818e-16,-62.5,-23.4375,4.4409e-16,-20.3125},
                {-20.3125,-23.4375,-4.4409e-16,15.625,-14.0625,8.8818e-16,-62.5,-8.8818e-16,1.7764e-15,100,0,1.7764e-15,-6.25,-5.8594,5.8594,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625},
                {-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,1.7764e-15,31.25,7.1054e-15,0,100,0,-5.8594,-6.25,5.8594,8.8818e-16,3.125,-4.4409e-16,8.8818e-16,15.625,0},
                {4.4409e-16,-4.4409e-16,3.125,8.8818e-16,-8.8818e-16,15.625,-2.6645e-15,3.5527e-15,31.25,1.7764e-15,0,100,5.8594,5.8594,-6.25,23.4375,4.4409e-16,-20.3125,-14.0625,0,-31.25},
                {15.625,-8.8818e-16,0,-10.1563,3.5156,11.7188,3.125,0,4.4409e-16,-6.25,-5.8594,5.8594,50,0,0,15.625,0,-1.7764e-15,-10.1563,-11.7188,-3.5156},
                {-8.8818e-16,15.625,14.0625,-3.5156,1.5625,3.5156,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,50,-23.4375,-8.8818e-16,-31.25,-14.0625,-11.7188,-10.1563,-3.5156},
                {0,-14.0625,-31.25,11.7188,-3.5156,-10.1563,0,23.4375,-20.3125,5.8594,5.8594,-6.25,0,-23.4375,50,-1.7764e-15,14.0625,15.625,3.5156,3.5156,1.5625},
                {3.125,-4.4409e-16,4.4409e-16,-6.25,5.8594,5.8594,31.25,8.8818e-16,-2.6645e-15,-20.3125,8.8818e-16,23.4375,15.625,-8.8818e-16,-1.7764e-15,100,0,3.5527e-15,-31.25,0,-14.0625},
                {0,-20.3125,-23.4375,5.8594,-6.25,-5.8594,-1.7764e-15,31.25,-8.8818e-16,0,3.125,4.4409e-16,0,-31.25,14.0625,0,100,1.7764e-15,1.7764e-15,15.625,8.8818e-16},
                {0,-23.4375,-20.3125,5.8594,-5.8594,-6.25,0,3.5527e-15,-62.5,23.4375,-4.4409e-16,-20.3125,-1.7764e-15,-14.0625,15.625,3.5527e-15,1.7764e-15,100,14.0625,3.5527e-15,15.625},
                {-6.25,-5.8594,-5.8594,1.5625,-3.5156,-3.5156,-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-10.1563,-11.7188,3.5156,-31.25,1.7764e-15,14.0625,50,0,23.4375},
                {-5.8594,-6.25,-5.8594,3.5156,-10.1563,-11.7188,4.4409e-16,3.125,4.4409e-16,-8.8818e-16,15.625,0,-11.7188,-10.1563,3.5156,0,15.625,3.5527e-15,0,50,0},
                {-5.8594,-5.8594,-6.25,3.5156,-11.7188,-10.1563,-23.4375,4.4409e-16,-20.3125,14.0625,0,-31.25,-3.5156,-3.5156,1.5625,-14.0625,8.8818e-16,15.625,23.4375,0,50}});
            }
            else if (subdomainID == 3)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{50,0,-1.7764e-15,15.625,0,8.8818e-16,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,0,-10.1563,3.5156,-11.7188,3.125,0,0,-6.25,-5.8594,-5.8594},
                {0,50,23.4375,0,-31.25,14.0625,-11.7188,-10.1563,3.5156,-8.8818e-16,15.625,-14.0625,-3.5156,1.5625,-3.5156,-4.4409e-16,-20.3125,-23.4375,-5.8594,-6.25,-5.8594},
                {-1.7764e-15,23.4375,50,8.8818e-16,-14.0625,15.625,-3.5156,-3.5156,1.5625,0,14.0625,-31.25,-11.7188,3.5156,-10.1563,4.4409e-16,-23.4375,-20.3125,-5.8594,-5.8594,-6.25},
                {15.625,0,8.8818e-16,100,1.7764e-15,0,-31.25,0,14.0625,3.125,-4.4409e-16,0,-6.25,5.8594,-5.8594,31.25,-1.7764e-15,0,-20.3125,4.4409e-16,-23.4375},
                {0,-31.25,-14.0625,1.7764e-15,100,0,8.8818e-16,15.625,1.7764e-15,0,-20.3125,23.4375,5.8594,-6.25,5.8594,8.8818e-16,31.25,3.5527e-15,0,3.125,4.4409e-16},
                {8.8818e-16,14.0625,15.625,0,0,100,-14.0625,3.5527e-15,15.625,4.4409e-16,23.4375,-20.3125,-5.8594,5.8594,-6.25,-2.6645e-15,-8.8818e-16,-62.5,-23.4375,4.4409e-16,-20.3125},
                {-10.1563,-11.7188,-3.5156,-31.25,8.8818e-16,-14.0625,50,0,-23.4375,-6.25,-5.8594,5.8594,1.5625,-3.5156,3.5156,-20.3125,0,23.4375,15.625,-8.8818e-16,14.0625},
                {-11.7188,-10.1563,-3.5156,0,15.625,3.5527e-15,0,50,0,-5.8594,-6.25,5.8594,3.5156,-10.1563,11.7188,8.8818e-16,3.125,-4.4409e-16,8.8818e-16,15.625,0},
                {3.5156,3.5156,1.5625,14.0625,1.7764e-15,15.625,-23.4375,0,50,5.8594,5.8594,-6.25,-3.5156,11.7188,-10.1563,23.4375,4.4409e-16,-20.3125,-14.0625,0,-31.25},
                {15.625,-8.8818e-16,0,3.125,0,4.4409e-16,-6.25,-5.8594,5.8594,100,0,-1.7764e-15,-31.25,14.0625,-8.8818e-16,31.25,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                {-8.8818e-16,15.625,14.0625,-4.4409e-16,-20.3125,23.4375,-5.8594,-6.25,5.8594,0,100,0,-14.0625,15.625,8.8818e-16,-8.8818e-16,-62.5,-1.7764e-15,-23.4375,-20.3125,0},
                {0,-14.0625,-31.25,0,23.4375,-20.3125,5.8594,5.8594,-6.25,-1.7764e-15,0,100,1.7764e-15,-1.7764e-15,15.625,-8.8818e-16,4.4409e-15,31.25,-4.4409e-16,-8.8818e-16,3.125},
                {-10.1563,-3.5156,-11.7188,-6.25,5.8594,-5.8594,1.5625,3.5156,-3.5156,-31.25,-14.0625,1.7764e-15,50,-23.4375,1.7764e-15,-20.3125,23.4375,-4.4409e-16,15.625,14.0625,8.8818e-16},
                {3.5156,1.5625,3.5156,5.8594,-6.25,5.8594,-3.5156,-10.1563,11.7188,14.0625,15.625,-1.7764e-15,-23.4375,50,-1.7764e-15,23.4375,-20.3125,-4.4409e-16,-14.0625,-31.25,0},
                {-11.7188,-3.5156,-10.1563,-5.8594,5.8594,-6.25,3.5156,11.7188,-10.1563,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,50,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,1.7764e-15,15.625},
                {3.125,-4.4409e-16,4.4409e-16,31.25,8.8818e-16,-2.6645e-15,-20.3125,8.8818e-16,23.4375,31.25,-8.8818e-16,-8.8818e-16,-20.3125,23.4375,4.4409e-16,200,0,5.3291e-15,-62.5,8.8818e-16,-2.6645e-15},
                {0,-20.3125,-23.4375,-1.7764e-15,31.25,-8.8818e-16,0,3.125,4.4409e-16,-8.8818e-16,-62.5,4.4409e-15,23.4375,-20.3125,-8.8818e-16,0,200,1.7764e-15,8.8818e-16,31.25,2.6645e-15},
                {0,-23.4375,-20.3125,0,3.5527e-15,-62.5,23.4375,-4.4409e-16,-20.3125,-8.8818e-16,-1.7764e-15,31.25,-4.4409e-16,-4.4409e-16,3.125,5.3291e-15,1.7764e-15,200,2.6645e-15,6.2172e-15,31.25},
                {-6.25,-5.8594,-5.8594,-20.3125,0,-23.4375,15.625,8.8818e-16,-14.0625,-20.3125,-23.4375,-4.4409e-16,15.625,-14.0625,8.8818e-16,-62.5,8.8818e-16,2.6645e-15,100,0,1.7764e-15},
                {-5.8594,-6.25,-5.8594,4.4409e-16,3.125,4.4409e-16,-8.8818e-16,15.625,0,-23.4375,-20.3125,-8.8818e-16,14.0625,-31.25,1.7764e-15,8.8818e-16,31.25,6.2172e-15,0,100,0},
                {-5.8594,-5.8594,-6.25,-23.4375,4.4409e-16,-20.3125,14.0625,0,-31.25,4.4409e-16,0,3.125,8.8818e-16,0,15.625,-2.6645e-15,2.6645e-15,31.25,1.7764e-15,0,100}});
            }
            else if (subdomainID == 4)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{100,1.7764e-15,1.7764e-15,-62.5,1.7764e-15,-3.5527e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375,-6.25,-5.8594,-5.8594},
                {1.7764e-15,100,1.7764e-15,-8.8818e-16,31.25,2.6645e-15,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,-4.4409e-16,-8.8818e-16,15.625,0,0,3.125,0,-5.8594,-6.25,-5.8594},
                {1.7764e-15,1.7764e-15,100,4.4409e-15,0,31.25,-8.8818e-16,2.6645e-15,15.625,0,-8.8818e-16,3.125,14.0625,0,-31.25,-23.4375,-4.4409e-16,-20.3125,-5.8594,-5.8594,-6.25},
                {-62.5,-8.8818e-16,4.4409e-15,200,-5.3291e-15,7.1054e-15,-20.3125,23.4375,4.4409e-16,31.25,-1.7764e-15,-8.8818e-16,-20.3125,0,23.4375,31.25,-2.6645e-15,-2.6645e-15,3.125,0,0},
                {1.7764e-15,31.25,0,-5.3291e-15,200,0,23.4375,-20.3125,-4.4409e-16,-1.7764e-15,-62.5,-2.6645e-15,8.8818e-16,3.125,0,0,31.25,1.7764e-15,-4.4409e-16,-20.3125,-23.4375},
                {-3.5527e-15,2.6645e-15,31.25,7.1054e-15,0,200,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,3.5527e-15,31.25,23.4375,0,-20.3125,0,0,-62.5,0,-23.4375,-20.3125},
                {15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,50,-23.4375,0,-31.25,-14.0625,-8.8818e-16,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,-10.1563,-3.5156,-11.7188},
                {-14.0625,-31.25,2.6645e-15,23.4375,-20.3125,-8.8818e-16,-23.4375,50,0,14.0625,15.625,1.7764e-15,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,3.5156,1.5625,3.5156},
                {-8.8818e-16,-8.8818e-16,15.625,4.4409e-16,-4.4409e-16,3.125,0,0,50,8.8818e-16,1.7764e-15,15.625,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,-11.7188,-3.5156,-10.1563},
                {-20.3125,-23.4375,0,31.25,-1.7764e-15,8.8818e-16,-31.25,14.0625,8.8818e-16,100,-3.5527e-15,1.7764e-15,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,15.625,-1.7764e-15,0},
                {-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,-14.0625,15.625,1.7764e-15,-3.5527e-15,100,0,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,-8.8818e-16,15.625,14.0625},
                {4.4409e-16,-4.4409e-16,3.125,-8.8818e-16,-2.6645e-15,31.25,-8.8818e-16,1.7764e-15,15.625,1.7764e-15,0,100,5.8594,5.8594,-6.25,0,23.4375,-20.3125,-8.8818e-16,-14.0625,-31.25},
                {15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,50,0,-23.4375,-31.25,0,-14.0625,-10.1563,-11.7188,-3.5156},
                {-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,0,50,0,0,15.625,8.8818e-16,-11.7188,-10.1563,-3.5156},
                {-14.0625,0,-31.25,23.4375,0,-20.3125,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,-23.4375,0,50,14.0625,-1.7764e-15,15.625,3.5156,3.5156,1.5625},
                {-20.3125,0,-23.4375,31.25,0,0,-6.25,5.8594,-5.8594,3.125,0,0,-31.25,0,14.0625,100,-1.7764e-15,3.5527e-15,15.625,-8.8818e-16,0},
                {4.4409e-16,3.125,-4.4409e-16,-2.6645e-15,31.25,0,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,0,15.625,-1.7764e-15,-1.7764e-15,100,1.7764e-15,-8.8818e-16,-31.25,-14.0625},
                {-23.4375,0,-20.3125,-2.6645e-15,1.7764e-15,-62.5,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-14.0625,8.8818e-16,15.625,3.5527e-15,1.7764e-15,100,0,14.0625,15.625},
                {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,-11.7188,15.625,-8.8818e-16,-8.8818e-16,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,0,50,-1.7764e-15,1.7764e-15},
                {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,-3.5156,1.5625,-3.5156,-1.7764e-15,15.625,-14.0625,-11.7188,-10.1563,3.5156,-8.8818e-16,-31.25,14.0625,-1.7764e-15,50,23.4375},
                {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-11.7188,3.5156,-10.1563,0,14.0625,-31.25,-3.5156,-3.5156,1.5625,0,-14.0625,15.625,1.7764e-15,23.4375,50}});
            }
            else if (subdomainID == 5)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{50,1.7764e-15,23.4375,-31.25,0,14.0625,-10.1563,-11.7188,3.5156,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                {1.7764e-15,50,0,8.8818e-16,15.625,1.7764e-15,-11.7188,-10.1563,3.5156,-8.8818e-16,15.625,0,0,3.125,0,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                {23.4375,0,50,-14.0625,1.7764e-15,15.625,-3.5156,-3.5156,1.5625,14.0625,0,-31.25,-23.4375,-4.4409e-16,-20.3125,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                {-31.25,8.8818e-16,-14.0625,100,-1.7764e-15,-1.7764e-15,15.625,0,-8.8818e-16,-20.3125,0,23.4375,31.25,-2.6645e-15,-2.6645e-15,-6.25,5.8594,5.8594,3.125,0,0},
                {0,15.625,1.7764e-15,-1.7764e-15,100,-1.7764e-15,0,-31.25,14.0625,8.8818e-16,3.125,0,0,31.25,1.7764e-15,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                {14.0625,1.7764e-15,15.625,-1.7764e-15,-1.7764e-15,100,8.8818e-16,-14.0625,15.625,23.4375,0,-20.3125,0,0,-62.5,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                {-10.1563,-11.7188,-3.5156,15.625,0,8.8818e-16,50,0,0,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-10.1563,3.5156,11.7188,15.625,-1.7764e-15,0},
                {-11.7188,-10.1563,-3.5156,0,-31.25,-14.0625,0,50,-23.4375,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,-3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625},
                {3.5156,3.5156,1.5625,-8.8818e-16,14.0625,15.625,0,-23.4375,50,5.8594,5.8594,-6.25,0,23.4375,-20.3125,11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25},
                {15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,-6.25,-5.8594,5.8594,100,0,1.7764e-15,-62.5,8.8818e-16,-2.6645e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                {-8.8818e-16,15.625,0,0,3.125,0,-5.8594,-6.25,5.8594,0,100,0,-8.8818e-16,31.25,2.6645e-15,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,0},
                {-14.0625,0,-31.25,23.4375,0,-20.3125,5.8594,5.8594,-6.25,1.7764e-15,0,100,4.4409e-15,-8.8818e-16,31.25,-8.8818e-16,3.5527e-15,15.625,0,-8.8818e-16,3.125},
                {-20.3125,0,-23.4375,31.25,0,0,3.125,0,0,-62.5,-8.8818e-16,4.4409e-15,200,0,5.3291e-15,-20.3125,23.4375,0,31.25,-1.7764e-15,-8.8818e-16},
                {4.4409e-16,3.125,-4.4409e-16,-2.6645e-15,31.25,0,-4.4409e-16,-20.3125,23.4375,8.8818e-16,31.25,-8.8818e-16,0,200,0,23.4375,-20.3125,0,0,-62.5,-2.6645e-15},
                {-23.4375,0,-20.3125,-2.6645e-15,1.7764e-15,-62.5,0,23.4375,-20.3125,-2.6645e-15,2.6645e-15,31.25,5.3291e-15,0,200,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,3.5527e-15,31.25},
                {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,-10.1563,-3.5156,11.7188,15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,50,-23.4375,0,-31.25,-14.0625,-8.8818e-16},
                {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,3.5156,1.5625,-3.5156,-14.0625,-31.25,3.5527e-15,23.4375,-20.3125,-8.8818e-16,-23.4375,50,-1.7764e-15,14.0625,15.625,8.8818e-16},
                {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,11.7188,3.5156,-10.1563,-8.8818e-16,-8.8818e-16,15.625,0,0,3.125,0,-1.7764e-15,50,1.7764e-15,1.7764e-15,15.625},
                {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,15.625,-8.8818e-16,-8.8818e-16,-20.3125,-23.4375,0,31.25,0,8.8818e-16,-31.25,14.0625,1.7764e-15,100,-1.7764e-15,1.7764e-15},
                {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,-1.7764e-15,15.625,-14.0625,-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,-14.0625,15.625,1.7764e-15,-1.7764e-15,100,0},
                {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,0,14.0625,-31.25,4.4409e-16,0,3.125,-8.8818e-16,-2.6645e-15,31.25,-8.8818e-16,8.8818e-16,15.625,1.7764e-15,0,100}});
            }
            else if (subdomainID == 6)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{50,23.4375,0,-31.25,14.0625,-1.7764e-15,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16,-10.1563,3.5156,-11.7188,1.5625,-3.5156,-3.5156,-6.25,-5.8594,-5.8594},
                {23.4375,50,1.7764e-15,-14.0625,15.625,8.8818e-16,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,-4.4409e-16,-3.5156,1.5625,-3.5156,3.5156,-10.1563,-11.7188,-5.8594,-6.25,-5.8594},
                {0,1.7764e-15,50,1.7764e-15,-8.8818e-16,15.625,-8.8818e-16,3.5527e-15,15.625,-4.4409e-16,-8.8818e-16,3.125,-11.7188,3.5156,-10.1563,3.5156,-11.7188,-10.1563,-5.8594,-5.8594,-6.25},
                {-31.25,-14.0625,1.7764e-15,100,-1.7764e-15,1.7764e-15,-20.3125,23.4375,-4.4409e-16,31.25,-1.7764e-15,8.8818e-16,15.625,-8.8818e-16,-8.8818e-16,-6.25,5.8594,5.8594,3.125,0,0},
                {14.0625,15.625,-8.8818e-16,-1.7764e-15,100,-1.7764e-15,23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,-2.6645e-15,-8.8818e-16,15.625,-14.0625,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                {-1.7764e-15,8.8818e-16,15.625,1.7764e-15,-1.7764e-15,100,4.4409e-16,-8.8818e-16,3.125,1.7764e-15,3.5527e-15,31.25,0,14.0625,-31.25,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                {15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,1.7764e-15,3.5527e-15,-62.5,1.7764e-15,-2.6645e-15,-6.25,5.8594,-5.8594,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375},
                {-14.0625,-31.25,3.5527e-15,23.4375,-20.3125,-8.8818e-16,1.7764e-15,100,1.7764e-15,-8.8818e-16,31.25,3.5527e-15,5.8594,-6.25,5.8594,-8.8818e-16,15.625,8.8818e-16,0,3.125,4.4409e-16},
                {-8.8818e-16,-8.8818e-16,15.625,-4.4409e-16,-8.8818e-16,3.125,3.5527e-15,1.7764e-15,100,1.7764e-15,7.1054e-15,31.25,-5.8594,5.8594,-6.25,14.0625,-8.8818e-16,-31.25,-23.4375,4.4409e-16,-20.3125},
                {-20.3125,-23.4375,-4.4409e-16,31.25,-1.7764e-15,1.7764e-15,-62.5,-8.8818e-16,1.7764e-15,200,-3.5527e-15,3.5527e-15,3.125,-4.4409e-16,0,-20.3125,0,23.4375,31.25,-2.6645e-15,0},
                {-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,3.5527e-15,1.7764e-15,31.25,7.1054e-15,-3.5527e-15,200,3.5527e-15,0,-20.3125,23.4375,8.8818e-16,3.125,-4.4409e-16,0,31.25,8.8818e-16},
                {4.4409e-16,-4.4409e-16,3.125,8.8818e-16,-2.6645e-15,31.25,-2.6645e-15,3.5527e-15,31.25,3.5527e-15,3.5527e-15,200,4.4409e-16,23.4375,-20.3125,23.4375,4.4409e-16,-20.3125,8.8818e-16,-1.7764e-15,-62.5},
                {-10.1563,-3.5156,-11.7188,15.625,-8.8818e-16,0,-6.25,5.8594,-5.8594,3.125,0,4.4409e-16,50,0,0,-10.1563,11.7188,3.5156,15.625,-8.8818e-16,0},
                {3.5156,1.5625,3.5156,-8.8818e-16,15.625,14.0625,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,0,50,-23.4375,11.7188,-10.1563,-3.5156,-8.8818e-16,-31.25,-14.0625},
                {-11.7188,-3.5156,-10.1563,-8.8818e-16,-14.0625,-31.25,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,0,-23.4375,50,-3.5156,3.5156,1.5625,0,14.0625,15.625},
                {1.5625,3.5156,3.5156,-6.25,5.8594,5.8594,15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,-10.1563,11.7188,-3.5156,50,0,-23.4375,-31.25,0,-14.0625},
                {-3.5156,-10.1563,-11.7188,5.8594,-6.25,-5.8594,-8.8818e-16,15.625,-8.8818e-16,0,3.125,4.4409e-16,11.7188,-10.1563,3.5156,0,50,0,1.7764e-15,15.625,8.8818e-16},
                {-3.5156,-11.7188,-10.1563,5.8594,-5.8594,-6.25,-14.0625,8.8818e-16,-31.25,23.4375,-4.4409e-16,-20.3125,3.5156,-3.5156,1.5625,-23.4375,0,50,14.0625,3.5527e-15,15.625},
                {-6.25,-5.8594,-5.8594,3.125,-4.4409e-16,0,-20.3125,0,-23.4375,31.25,0,8.8818e-16,15.625,-8.8818e-16,0,-31.25,1.7764e-15,14.0625,100,-1.7764e-15,1.7764e-15},
                {-5.8594,-6.25,-5.8594,0,-20.3125,-23.4375,4.4409e-16,3.125,4.4409e-16,-2.6645e-15,31.25,-1.7764e-15,-8.8818e-16,-31.25,14.0625,0,15.625,3.5527e-15,-1.7764e-15,100,3.5527e-15},
                {-5.8594,-5.8594,-6.25,0,-23.4375,-20.3125,-23.4375,4.4409e-16,-20.3125,0,8.8818e-16,-62.5,0,-14.0625,15.625,-14.0625,8.8818e-16,15.625,1.7764e-15,3.5527e-15,100}});
            }
            else if (subdomainID == 7)
            {
                return Matrix.CreateFromArray(new double[21, 21]
                {{50,-1.7764e-15,0,-10.1563,11.7188,-3.5156,15.625,0,8.8818e-16,-10.1563,-3.5156,11.7188,15.625,-8.8818e-16,-8.8818e-16,-6.25,5.8594,5.8594,3.125,0,0},
                {-1.7764e-15,50,23.4375,11.7188,-10.1563,3.5156,0,-31.25,14.0625,3.5156,1.5625,-3.5156,-8.8818e-16,15.625,-14.0625,5.8594,-6.25,-5.8594,-4.4409e-16,-20.3125,-23.4375},
                {0,23.4375,50,3.5156,-3.5156,1.5625,1.7764e-15,-14.0625,15.625,11.7188,3.5156,-10.1563,0,14.0625,-31.25,5.8594,-5.8594,-6.25,0,-23.4375,-20.3125},
                {-10.1563,11.7188,3.5156,50,1.7764e-15,23.4375,-31.25,0,14.0625,1.5625,3.5156,-3.5156,-6.25,5.8594,-5.8594,15.625,-8.8818e-16,-14.0625,-20.3125,4.4409e-16,-23.4375},
                {11.7188,-10.1563,-3.5156,1.7764e-15,50,0,8.8818e-16,15.625,1.7764e-15,-3.5156,-10.1563,11.7188,5.8594,-6.25,5.8594,-8.8818e-16,15.625,8.8818e-16,0,3.125,4.4409e-16},
                {-3.5156,3.5156,1.5625,23.4375,0,50,-14.0625,3.5527e-15,15.625,3.5156,11.7188,-10.1563,-5.8594,5.8594,-6.25,14.0625,-8.8818e-16,-31.25,-23.4375,4.4409e-16,-20.3125},
                {15.625,0,1.7764e-15,-31.25,8.8818e-16,-14.0625,100,-1.7764e-15,0,-6.25,-5.8594,5.8594,3.125,-4.4409e-16,0,-20.3125,0,23.4375,31.25,-2.6645e-15,0},
                {0,-31.25,-14.0625,0,15.625,3.5527e-15,-1.7764e-15,100,0,-5.8594,-6.25,5.8594,0,-20.3125,23.4375,8.8818e-16,3.125,-4.4409e-16,0,31.25,8.8818e-16},
                {8.8818e-16,14.0625,15.625,14.0625,1.7764e-15,15.625,0,0,100,5.8594,5.8594,-6.25,4.4409e-16,23.4375,-20.3125,23.4375,4.4409e-16,-20.3125,8.8818e-16,-1.7764e-15,-62.5},
                {-10.1563,3.5156,11.7188,1.5625,-3.5156,3.5156,-6.25,-5.8594,5.8594,50,23.4375,-1.7764e-15,-31.25,14.0625,-8.8818e-16,15.625,-14.0625,-8.8818e-16,-20.3125,-23.4375,4.4409e-16},
                {-3.5156,1.5625,3.5156,3.5156,-10.1563,11.7188,-5.8594,-6.25,5.8594,23.4375,50,1.7764e-15,-14.0625,15.625,8.8818e-16,14.0625,-31.25,-8.8818e-16,-23.4375,-20.3125,0},
                {11.7188,-3.5156,-10.1563,-3.5156,11.7188,-10.1563,5.8594,5.8594,-6.25,-1.7764e-15,1.7764e-15,50,1.7764e-15,-1.7764e-15,15.625,-8.8818e-16,2.6645e-15,15.625,-4.4409e-16,-8.8818e-16,3.125},
                {15.625,-8.8818e-16,0,-6.25,5.8594,-5.8594,3.125,0,4.4409e-16,-31.25,-14.0625,1.7764e-15,100,0,0,-20.3125,23.4375,-4.4409e-16,31.25,-1.7764e-15,8.8818e-16},
                {-8.8818e-16,15.625,14.0625,5.8594,-6.25,5.8594,-4.4409e-16,-20.3125,23.4375,14.0625,15.625,-1.7764e-15,0,100,-1.7764e-15,23.4375,-20.3125,-4.4409e-16,0,-62.5,-1.7764e-15},
                {-8.8818e-16,-14.0625,-31.25,-5.8594,5.8594,-6.25,0,23.4375,-20.3125,-8.8818e-16,8.8818e-16,15.625,0,-1.7764e-15,100,4.4409e-16,-8.8818e-16,3.125,8.8818e-16,2.6645e-15,31.25},
                {-6.25,5.8594,5.8594,15.625,-8.8818e-16,14.0625,-20.3125,8.8818e-16,23.4375,15.625,14.0625,-8.8818e-16,-20.3125,23.4375,4.4409e-16,100,0,3.5527e-15,-62.5,8.8818e-16,-2.6645e-15},
                {5.8594,-6.25,-5.8594,-8.8818e-16,15.625,-8.8818e-16,0,3.125,4.4409e-16,-14.0625,-31.25,2.6645e-15,23.4375,-20.3125,-8.8818e-16,0,100,0,8.8818e-16,31.25,2.6645e-15},
                {5.8594,-5.8594,-6.25,-14.0625,8.8818e-16,-31.25,23.4375,-4.4409e-16,-20.3125,-8.8818e-16,-8.8818e-16,15.625,-4.4409e-16,-4.4409e-16,3.125,3.5527e-15,0,100,2.6645e-15,6.2172e-15,31.25},
                {3.125,-4.4409e-16,0,-20.3125,0,-23.4375,31.25,0,8.8818e-16,-20.3125,-23.4375,-4.4409e-16,31.25,0,8.8818e-16,-62.5,8.8818e-16,2.6645e-15,200,-1.7764e-15,3.5527e-15},
                {0,-20.3125,-23.4375,4.4409e-16,3.125,4.4409e-16,-2.6645e-15,31.25,-1.7764e-15,-23.4375,-20.3125,-8.8818e-16,-1.7764e-15,-62.5,2.6645e-15,8.8818e-16,31.25,6.2172e-15,-1.7764e-15,200,3.5527e-15},
                {0,-23.4375,-20.3125,-23.4375,4.4409e-16,-20.3125,0,8.8818e-16,-62.5,4.4409e-16,0,3.125,8.8818e-16,-1.7764e-15,31.25,-2.6645e-15,2.6645e-15,31.25,3.5527e-15,3.5527e-15,200}});
            }
            else throw new ArgumentException("Subdomain ID must be in [0, 8)");
        }

        public static Matrix GetMatrixKrc(int subdomainID)
        {
            if (subdomainID == 0)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{-6.25,-5.8594,-5.8594},
                {-5.8594,-6.25,-5.8594},
                {-5.8594,-5.8594,-6.25},
                {1.5625,3.5156,3.5156},
                {-3.5156,-10.1563,-11.7188},
                {-3.5156,-11.7188,-10.1563},
                {-10.1563,-3.5156,-11.7188},
                {3.5156,1.5625,3.5156},
                {-11.7188,-3.5156,-10.1563},
                {7.8125,5.8594,7.0313},
                {5.8594,7.8125,7.0313},
                {-7.0313,-7.0313,-15.625},
                {-10.1563,-11.7188,-3.5156},
                {-11.7188,-10.1563,-3.5156},
                {3.5156,3.5156,1.5625},
                {7.8125,7.0313,5.8594},
                {-7.0313,-15.625,-7.0313},
                {5.8594,7.0313,7.8125},
                {-15.625,-7.0313,-7.0313},
                {7.0313,7.8125,5.8594},
                {7.0313,5.8594,7.8125}});
            }
            else if (subdomainID == 1)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{-10.1563,-11.7188,3.5156},
                {-11.7188,-10.1563,3.5156},
                {-3.5156,-3.5156,1.5625},
                {7.8125,7.0313,-5.8594},
                {-7.0313,-15.625,7.0313},
                {-5.8594,-7.0313,7.8125},
                {-15.625,-7.0313,7.0313},
                {7.0313,7.8125,-5.8594},
                {-7.0313,-5.8594,7.8125},
                {-6.25,-5.8594,5.8594},
                {-5.8594,-6.25,5.8594},
                {5.8594,5.8594,-6.25},
                {1.5625,3.5156,-3.5156},
                {-3.5156,-10.1563,11.7188},
                {3.5156,11.7188,-10.1563},
                {-10.1563,-3.5156,11.7188},
                {3.5156,1.5625,-3.5156},
                {11.7188,3.5156,-10.1563},
                {7.8125,5.8594,-7.0313},
                {5.8594,7.8125,-7.0313},
                {7.0313,7.0313,-15.625}});
            }
            else if (subdomainID == 2)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{-10.1563,3.5156,-11.7188},
                {-3.5156,1.5625,-3.5156},
                {-11.7188,3.5156,-10.1563},
                {7.8125,-5.8594,7.0313},
                {-5.8594,7.8125,-7.0313},
                {-7.0313,7.0313,-15.625},
                {-6.25,5.8594,-5.8594},
                {5.8594,-6.25,5.8594},
                {-5.8594,5.8594,-6.25},
                {1.5625,-3.5156,3.5156},
                {3.5156,-10.1563,11.7188},
                {-3.5156,11.7188,-10.1563},
                {-15.625,7.0313,-7.0313},
                {-7.0313,7.8125,-5.8594},
                {7.0313,-5.8594,7.8125},
                {-10.1563,11.7188,-3.5156},
                {11.7188,-10.1563,3.5156},
                {3.5156,-3.5156,1.5625},
                {7.8125,-7.0313,5.8594},
                {7.0313,-15.625,7.0313},
                {5.8594,-7.0313,7.8125}});
            }
            else if (subdomainID == 3)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{-15.625,7.0313,7.0313},
                {-7.0313,7.8125,5.8594},
                {-7.0313,5.8594,7.8125},
                {-10.1563,11.7188,3.5156},
                {11.7188,-10.1563,-3.5156},
                {-3.5156,3.5156,1.5625},
                {7.8125,-7.0313,-5.8594},
                {7.0313,-15.625,-7.0313},
                {-5.8594,7.0313,7.8125},
                {-10.1563,3.5156,11.7188},
                {-3.5156,1.5625,3.5156},
                {11.7188,-3.5156,-10.1563},
                {7.8125,-5.8594,-7.0313},
                {-5.8594,7.8125,7.0313},
                {7.0313,-7.0313,-15.625},
                {-6.25,5.8594,5.8594},
                {5.8594,-6.25,-5.8594},
                {5.8594,-5.8594,-6.25},
                {1.5625,-3.5156,-3.5156},
                {3.5156,-10.1563,-11.7188},
                {3.5156,-11.7188,-10.1563}});
            }
            else if (subdomainID == 4)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{1.5625,-3.5156,-3.5156},
                {3.5156,-10.1563,-11.7188},
                {3.5156,-11.7188,-10.1563},
                {-6.25,5.8594,5.8594},
                {5.8594,-6.25,-5.8594},
                {5.8594,-5.8594,-6.25},
                {7.8125,-5.8594,-7.0313},
                {-5.8594,7.8125,7.0313},
                {7.0313,-7.0313,-15.625},
                {-10.1563,3.5156,11.7188},
                {-3.5156,1.5625,3.5156},
                {11.7188,-3.5156,-10.1563},
                {7.8125,-7.0313,-5.8594},
                {7.0313,-15.625,-7.0313},
                {-5.8594,7.0313,7.8125},
                {-10.1563,11.7188,3.5156},
                {11.7188,-10.1563,-3.5156},
                {-3.5156,3.5156,1.5625},
                {-15.625,7.0313,7.0313},
                {-7.0313,7.8125,5.8594},
                {-7.0313,5.8594,7.8125}});
            }
            else if (subdomainID == 5)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{7.8125,-7.0313,5.8594},
                {7.0313,-15.625,7.0313},
                {5.8594,-7.0313,7.8125},
                {-10.1563,11.7188,-3.5156},
                {11.7188,-10.1563,3.5156},
                {3.5156,-3.5156,1.5625},
                {-15.625,7.0313,-7.0313},
                {-7.0313,7.8125,-5.8594},
                {7.0313,-5.8594,7.8125},
                {1.5625,-3.5156,3.5156},
                {3.5156,-10.1563,11.7188},
                {-3.5156,11.7188,-10.1563},
                {-6.25,5.8594,-5.8594},
                {5.8594,-6.25,5.8594},
                {-5.8594,5.8594,-6.25},
                {7.8125,-5.8594,7.0313},
                {-5.8594,7.8125,-7.0313},
                {-7.0313,7.0313,-15.625},
                {-10.1563,3.5156,-11.7188},
                {-3.5156,1.5625,-3.5156},
                {-11.7188,3.5156,-10.1563}});
            }
            else if (subdomainID == 6)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{7.8125,5.8594,-7.0313},
                {5.8594,7.8125,-7.0313},
                {7.0313,7.0313,-15.625},
                {-10.1563,-3.5156,11.7188},
                {3.5156,1.5625,-3.5156},
                {11.7188,3.5156,-10.1563},
                {1.5625,3.5156,-3.5156},
                {-3.5156,-10.1563,11.7188},
                {3.5156,11.7188,-10.1563},
                {-6.25,-5.8594,5.8594},
                {-5.8594,-6.25,5.8594},
                {5.8594,5.8594,-6.25},
                {-15.625,-7.0313,7.0313},
                {7.0313,7.8125,-5.8594},
                {-7.0313,-5.8594,7.8125},
                {7.8125,7.0313,-5.8594},
                {-7.0313,-15.625,7.0313},
                {-5.8594,-7.0313,7.8125},
                {-10.1563,-11.7188,3.5156},
                {-11.7188,-10.1563,3.5156},
                {-3.5156,-3.5156,1.5625}});
            }
            else if (subdomainID == 7)
            {
                return Matrix.CreateFromArray(new double[21, 3]
                {{-15.625,-7.0313,-7.0313},
                {7.0313,7.8125,5.8594},
                {7.0313,5.8594,7.8125},
                {7.8125,7.0313,5.8594},
                {-7.0313,-15.625,-7.0313},
                {5.8594,7.0313,7.8125},
                {-10.1563,-11.7188,-3.5156},
                {-11.7188,-10.1563,-3.5156},
                {3.5156,3.5156,1.5625},
                {7.8125,5.8594,7.0313},
                {5.8594,7.8125,7.0313},
                {-7.0313,-7.0313,-15.625},
                {-10.1563,-3.5156,-11.7188},
                {3.5156,1.5625,3.5156},
                {-11.7188,-3.5156,-10.1563},
                {1.5625,3.5156,3.5156},
                {-3.5156,-10.1563,-11.7188},
                {-3.5156,-11.7188,-10.1563},
                {-6.25,-5.8594,-5.8594},
                {-5.8594,-6.25,-5.8594},
                {-5.8594,-5.8594,-6.25}});
            }
            else throw new ArgumentException("Subdomain ID must be in [0, 8)");
        }

        public static Vector GetVectorFbc(int subdomainID)
        {
            return GetVectorFf(subdomainID).GetSubvector(ExpectedConnectivityData.GetDofsCornerInFree(subdomainID));
        }

        public static Vector GetVectorFcStar(int subdomainID) //TODO: Hardcode the expected vectors
        {
            // fcStar[s] = fbc[s] - Krc[s]^T * inv(Krr[s]) * fr[s]
            Matrix Krc = GetMatrixKrc(subdomainID);
            Matrix Krr = GetMatrixKrr(subdomainID);
            Vector fbc = GetVectorFbc(subdomainID);
            Vector fr = GetVectorFr(subdomainID);
            return fbc - Krc.Transpose() * (Krr.Invert() * fr);
        }

        public static Vector GetVectorFf(int subdomainID)
        {
            var Ff = Vector.CreateZero(24);
            int loadedDof = ExpectedConnectivityData.GetDofsCornerInFree(subdomainID)[2]; // 1 corner node - x,y,z dofs
            Ff[loadedDof] = 1.0 / 8;
            return Ff;
        }

        public static Vector GetVectorFr(int subdomainID)
        {
            return GetVectorFf(subdomainID).GetSubvector(ExpectedConnectivityData.GetDofsRemainderInFree(subdomainID));
        }
    }
}
