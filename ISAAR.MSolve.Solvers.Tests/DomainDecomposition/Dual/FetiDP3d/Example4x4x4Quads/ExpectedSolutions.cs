using System;
using System.Collections.Generic;
using System.Text;
using ISAAR.MSolve.LinearAlgebra.Vectors;
using ISAAR.MSolve.LinearAlgebra.Matrices;


namespace ISAAR.MSolve.Solvers.Tests.DomainDecomposition.Dual.FetiDP3d.Example4x4x4Quads
{
    public static class ExpectedSolutions
    {
        public static Vector SolutionLagrangesSimple()
        {
            return Vector.CreateFromArray(new double[144]
            {
                -0.002893289353157,
                -0.002894474927390,
                -0.000000690715934,
                -0.000000368090055,
                -0.007666758266858,
                -0.000001976333065,
                0.004782494066987,
                -0.007185025336019,
                0.000182241608111,
                -0.001546154156015,
                -0.007078240930910,
                0.000363629889120,
                0.003236370103301,
                0.000319300973735,
                0.000545840167484,
                -0.006328648223002,
                0.000106784405109,
                0.000181388281009,
                -0.001546123963686,
                0.007504326309754,
                0.000363598559372,
                0.004782524259317,
                0.007397541904644,
                0.000182210278363,
                -0.000000161203089,
                0.007668674051078,
                -0.000002289713877,
                -0.002893082466190,
                0.002893809163289,
                0.000000225815675,
                -0.007670802142974,
                -0.000000775933104,
                -0.000002300299580,
                -0.007123176479256,
                0.004908430551504,
                0.000275371957904,
                -0.006954330722058,
                -0.001295152311977,
                0.000551275106648,
                0.000505381450303,
                0.003613361689200,
                0.000826169483784,
                0.000168845757198,
                -0.006203582863481,
                0.000275903148744,
                0.007628557929559,
                -0.001295068862304,
                0.000550797525880,
                0.007459712172361,
                0.004908514001177,
                0.000274894377136,
                0.007671605582170,
                -0.000000110169002,
                -0.000001965747361,
                0.001700397964632,
                -0.005966786677399,
                -0.000233479821016,
                -0.003711050853992,
                0.002287820328681,
                -0.000466314883616,
                -0.002011484620304,
                -0.003679874008205,
                -0.000699190385990,
                -0.005411448818624,
                0.008254607006080,
                -0.000232835062600,
                -0.003711882584936,
                0.002286912669193,
                -0.000465710564974,
                0.001699566233688,
                -0.005967694336887,
                -0.000232875502374,
                -0.001699566233688,
                0.005967694336887,
                0.000232875502374,
                0.003711882584936,
                -0.002286912669193,
                0.000465710564974,
                0.002011484620304,
                0.003679874008205,
                0.000699190385990,
                0.005411448818624,
                -0.008254607006080,
                0.000232835062600,
                0.003711050853992,
                -0.002287820328681,
                0.000466314883616,
                -0.001700397964632,
                0.005966786677398,
                0.000233479821016,
                -0.007671605582170,
                0.000000110169002,
                0.000001965747361,
                -0.007459712172361,
                -0.004908514001177,
                -0.000274894377136,
                -0.007628557929559,
                0.001295068862304,
                -0.000550797525880,
                -0.000505381450303,
                -0.003613361689200,
                -0.000826169483784,
                -0.000168845757198,
                0.006203582863481,
                -0.000275903148744,
                0.006954330722058,
                0.001295152311977,
                -0.000551275106648,
                0.007123176479256,
                -0.004908430551504,
                -0.000275371957904,
                0.007670802142974,
                0.000000775933104,
                0.000002300299580,
                0.002893082466190,
                -0.002893809163289,
                -0.000000225815675,
                0.000000161203089,
                -0.007668674051078,
                0.000002289713877,
                -0.004782524259317,
                -0.007397541904644,
                -0.000182210278363,
                0.001546123963686,
                -0.007504326309754,
                -0.000363598559372,
                -0.003236370103301,
                -0.000319300973735,
                -0.000545840167484,
                0.006328648223002,
                -0.000106784405109,
                -0.000181388281009,
                0.001546154156015,
                0.007078240930910,
                -0.000363629889120,
                -0.004782494066987,
                0.007185025336019,
                -0.000182241608111,
                0.000000368090055,
                0.007666758266858,
                0.000001976333065,
                0.002893289353157,
                0.002894474927390,
                0.000000690715934
            });
        }

        private static double[] uFreeSolution(int subdomainID)
        {


            if (subdomainID == 0)
            {
                return new double[24]
                {0.0000568350, 0.0000568106, 0.0001235908, 0.0000000254, 0.0006689421, 0.0002884569, 0.0006689456, -0.0000000465, 0.0002884526, -0.0000000184, -0.0000000162, 0.0019847248, -0.0000000035, -0.0000000020, 0.0003531691, 0.0000000129, -0.0000000101, -0.0004829422, 0.0000000093, -0.0000000110, -0.0004829434, 0.0000000087, 0.0000000024, 0.0074392351};
            }
            else if (subdomainID == 1)
            {
                return new double[24]
                {0.0000000007, -0.0000000067, 0.0003531342, -0.0000000197, 0.0000000255, -0.0004829482, -0.0000000137, 0.0000000065, -0.0004828947, 0.0000000087, 0.0000000024, 0.0074392351, -0.0000568414, -0.0000568269, 0.0001235841, -0.0000000301, -0.0006689509, 0.0002884505, -0.0006689462, 0.0000000227, 0.0002884654, 0.0000000006, -0.0000000211, 0.0019847120};
            }
            else if (subdomainID == 2)
            {
                return new double[24]
                {0.0006689644, 0.0000000431, 0.0002883946, 0.0000000739, 0.0000000246, 0.0019846980, 0.0000568414, -0.0000568160, 0.0001235898, 0.0000000458, -0.0006689352, 0.0002883999, 0.0000000248, 0.0000000181, -0.0004829881, 0.0000000087, 0.0000000024, 0.0074392351, 0.0000000049, -0.0000000010, 0.0003531371, -0.0000000069, 0.0000000062, -0.0004829574};
            }
            else if (subdomainID == 3)
            {
                return new double[24]
                {-0.0000000036, -0.0000000149, -0.0004829122, 0.0000000087, 0.0000000024, 0.0074392351, 0.0000000058, 0.0000000091, 0.0003531375, 0.0000000400, -0.0000000235, -0.0004829028, -0.0006689473, -0.0000000185, 0.0002884064, 0.0000000170, 0.0000000395, 0.0019847364, -0.0000568395, 0.0000568254, 0.0001235954, -0.0000000219, 0.0006689478, 0.0002884095};
            }
            else if (subdomainID == 4)
            {
                return new double[24]
                {-0.0000000219, 0.0006689478, 0.0002884095, -0.0000568395, 0.0000568254, 0.0001235954, 0.0000000170, 0.0000000395, 0.0019847364, -0.0006689473, -0.0000000185, 0.0002884064, 0.0000000400, -0.0000000235, -0.0004829028, 0.0000000058, 0.0000000091, 0.0003531375, 0.0000000087, 0.0000000024, 0.0074392351, -0.0000000036, -0.0000000149, -0.0004829122};
            }
            else if (subdomainID == 5)
            {
                return new double[24]
                {-0.0000000069, 0.0000000062, -0.0004829574, 0.0000000049, -0.0000000010, 0.0003531371, 0.0000000087, 0.0000000024, 0.0074392351, 0.0000000248, 0.0000000181, -0.0004829881, 0.0000000458, -0.0006689352, 0.0002883999, 0.0000568414, -0.0000568160, 0.0001235898, 0.0000000739, 0.0000000246, 0.0019846980, 0.0006689644, 0.0000000431, 0.0002883946};
            }
            else if (subdomainID == 6)
            {
                return new double[24]
                {0.0000000006, -0.0000000211, 0.0019847120, -0.0006689462, 0.0000000227, 0.0002884654, -0.0000000301, -0.0006689509, 0.0002884505, -0.0000568414, -0.0000568269, 0.0001235841, 0.0000000087, 0.0000000024, 0.0074392351, -0.0000000137, 0.0000000065, -0.0004828947, -0.0000000197, 0.0000000255, -0.0004829482, 0.0000000007, -0.0000000067, 0.0003531342};
            }
            else if (subdomainID == 7)
            {
                return new double[24]
                {0.0000000087, 0.0000000024, 0.0074392351, 0.0000000093, -0.0000000110, -0.0004829434, 0.0000000129, -0.0000000101, -0.0004829422, -0.0000000035, -0.0000000020, 0.0003531691, -0.0000000184, -0.0000000162, 0.0019847248, 0.0006689456, -0.0000000465, 0.0002884526, 0.0000000254, 0.0006689421, 0.0002884569, 0.0000568350, 0.0000568106, 0.0001235908};
            }
            else
            {
                throw new ArgumentException("Subdomain Id");
            }

        }

        public static Vector uFree(int subdomainID)
        {
            return Vector.CreateFromArray(uFreeSolution(subdomainID));
        }

        public static Vector ucTilde()
        {
            return Vector.CreateFromArray( new double[21]
{0.000000008652133,
0.000000002356517,
0.007439235077447,
-0.003399324903586,
-0.002287123922409,
0.000466006678792,
-0.000337092089841,
0.001294841972150,
-0.000550665196121,
0.001546113098391,
-0.000212829721380,
-0.000363502437493,
-0.001546113098391,
0.000212829721380,
0.000363502437493,
0.000337092089841,
-0.001294841972150,
0.000550665196121,
0.003399324903586,
0.002287123922409,
-0.000466006678792});
        }


    }
}
